# @(#)ts.jtx	1.4 02/06/05
# Copyright 1995-2002 by Sun Microsystems, Inc.,
# All rights reserved.
#
# This software is the confidential and proprietary information
# of Sun Microsystems, Inc. ("Confidential Information").  You
# shall not disclose such Confidential Information and shall use
# it only in accordance with the terms of the license agreement
# you entered into with Sun.
#

#
# These tests are disabled because of a bug/feature in HttpClient that we are
# using. HttpClient disallow redirect for the POST. The test strategy for the
# the following tests uses POST data put by the Client.(BugTraq ID 4956116)
#
#
com/sun/ts/tests/portlet/api/javax_portlet/ActionRequest/URLClient.java#GetContentLengthTest
com/sun/ts/tests/portlet/api/javax_portlet/ActionRequest/URLClient.java#GetContentTypeTest
com/sun/ts/tests/portlet/api/javax_portlet/ActionRequest/URLClient.java#GetReaderInProcessActionTest
com/sun/ts/tests/portlet/api/javax_portlet/ActionRequest/URLClient.java#GetReaderIllegalStateAfterInputStreamTest
com/sun/ts/tests/portlet/api/javax_portlet/ActionRequest/URLClient.java#GetReaderIllegalStateWithApplFormPostDataTest
com/sun/ts/tests/portlet/api/javax_portlet/ActionRequest/URLClient.java#GetInputStreamInProcessActionTest
com/sun/ts/tests/portlet/api/javax_portlet/ActionRequest/URLClient.java#GetInputStreamIllegalStateAfterReaderTest
com/sun/ts/tests/portlet/api/javax_portlet/ActionRequest/URLClient.java#GetInputStreamIllegalStateWithApplFormPostDataTest
com/sun/ts/tests/portlet/api/javax_portlet/ActionRequest/URLClient.java#GetCharacterEncodingTest

#
# These tests are disabled because of a gap in the JSP Tag Library
# APIs.  They will be enabled after this issue is clarified (currently 
# [CLR-58] of the JSP 2.1 specification)(BugTraq #4956120).
#
com/sun/ts/tests/portlet/ee/taglib/SpecURLClient.java#ActionURLVarOverwriteTest
com/sun/ts/tests/portlet/ee/taglib/SpecURLClient.java#RenderURLVarOverwriteTest

#
# The Problem with the two tests is that Tomcat 4.1.27 is not spec
# compliant. If an include is made from one wepapp to another they share the
# same session. This is a violation of the servlet Spec 2.3 as described in
# SRV 7.3 last paragraph. It seems that the session used is always the one
# which belongs to the webapp the client request was directed to. This
# behavior should be fixed with Tomcat 5.0.7 as stated in
# http://issues.apache.org/bugzilla/show_bug.cgi?id=4690(BugTraq #4956122).
#

com/sun/ts/tests/portlet/api/javax_portlet/PortletSession/SpecURLClient.java#CheckSessionValueForPortletsInDiffAppTest
com/sun/ts/tests/portlet/api/javax_portlet/PortletSession/SpecURLClient.java#ComparePortletAndHttpSessionTest

#
# Test shouldn't have assumed that the container can't create
# a new session, when the old session has expired. A better test
# would be to add something to the session as an attribute then set the timeout.
# On the next request, verify that the attribute is not there, else fail. 
# (BugTraq 4956125)
# 
#
com/sun/ts/tests/portlet/api/javax_portlet/PortletSession/URLClient.java#GetMaxInactiveIntervalTimeoutTest

