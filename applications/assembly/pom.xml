<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2003-2010 eXo Platform SAS.

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU Affero General Public License
    as published by the Free Software Foundation; either version 3
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, see <http://www.gnu.org/licenses />.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.exoplatform.portletcontainer</groupId>
    <artifactId>config</artifactId>
    <version>2.0.14</version>
  </parent>
  <artifactId>assembly</artifactId>
  <name>eXo PC Demo Assembly</name>
  <dependencies>
    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.applications.portal</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
      <type>exopc-war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.applications.wsrp</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
      <type>exopc-war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.applications.portlets</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
      <type>exopc-war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.applications.portlets2</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
      <type>exopc-war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.applications.demos</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
      <type>exopc-war</type>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.component.core</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.component.plugins.pc</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.portal-framework</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.portlets2events</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.component.plugins.wsrp1</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.component.plugins.wsrp2</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.1.2</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>1.1.2</version>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.2</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3</version>
    </dependency>
  </dependencies>
  
  <profiles>
    <profile>
      <id>test-wsrp1</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.exoplatform.portletcontainer</groupId>
          <artifactId>exo.pc.component.core</artifactId>
          <version>${project.version}</version>
          <scope>compile</scope>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.portletcontainer</groupId>
          <artifactId>exo.pc.component.plugins.pc</artifactId>
          <version>${project.version}</version>
          <scope>compile</scope>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.portletcontainer</groupId>
          <artifactId>exo.pc.component.plugins.wsrp1</artifactId>
          <version>${project.version}</version>
          <scope>compile</scope>
        </dependency>

        <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>jstl</artifactId>
          <version>1.1.2</version>
          <scope>compile</scope>
        </dependency>

        <dependency>
          <groupId>taglibs</groupId>
          <artifactId>standard</artifactId>
          <version>1.1.2</version>
        </dependency>

      </dependencies>

      <build>
        <finalName>portlet-container</finalName>
        <plugins>


			    <plugin>
				    <artifactId>maven-antrun-plugin</artifactId>
				    <version>1.3</version>
            <executions>
              <execution>
                <id>1</id>
                <phase>install</phase>
                <configuration>
                  <tasks>
     		  <echo>=== To copy the hello.war to the test tomcat 'exo-tomcat'</echo>
		      <echo>TO: ${exo.projects.directory.working}/exo-tomcat/webapps/</echo>
		      <echo>FROM: ${exo.projects.directory.src}/portlet-container/${project.version}/component/plugins/wsrp1/target/hello.war</echo>
            		<copy todir="${exo.projects.directory.working}/exo-tomcat/webapps/">
			    <fileset dir="../../component/plugins/wsrp1/target/">
				    <include name="**/hello.war" />
			    </fileset>
			    </copy>
		      <echo>=== To remove the portal.xml in /conf/Catalina/localhost, which came as exopc-war patch</echo>
                      <delete file="${exo.projects.directory.working}/exo-tomcat/conf/Catalina/localhost/portal.xml" />
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
	    </plugin>


          <plugin>
            <groupId>org.exoplatform.maven.plugins</groupId>
            <artifactId>maven-exopc-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <sharedDir>${basedir}/patches</sharedDir>
              <excludeProjects>
                junit, jmock, bcel, ehcache,cargo-core-api-container,cargo-core-api-generic,cargo-core-api-module,xercesImpl, msv, servlet-api, jibx-bind, isorelax,
                relaxngDatatype, cargo-core-api-util, cargo-core-container-tomcat,velocity-dep, saxpath, exo-platform.test.framework,
                xmldb-api, castor, drools-smftest, jsp-api, xml-apis, xml-resolver, jaxen,
                xjavadoc, xdoclet-hibernate-module, xdoclet-xdoclet-module, xdoclet,
                saaj-api, exo-weblogic-authproviders, exo-weblogic-loginmodule,
                carol, commons-fileupload, commons-io, drools-base, drools-core, drools-java,
                drools-smf, exo-platform.services.backup.api, exo-platform.services.ldap.api,
                exo-platform.services.ldap.impl, exo-platform.services.remote.api,
                exo-platform.services.remote.impl, exo-platform.services.templates.api,
                exo-platform.services.templates.impl, groovy-all-1.0-jsr, howl-logger, janino,
                jotm, jotm_jrmp_stubs, log4j, soap, velocity, naming-core, naming-java, jsf-api, xerces
              </excludeProjects>
            </configuration>
          </plugin>

        </plugins>
      </build>
    </profile>
    <profile>
      <id>test-wsrp2</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
        <dependencies>

          <dependency>
            <groupId>org.exoplatform.portletcontainer</groupId>
            <artifactId>exo.pc.component.core</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
          </dependency>

          <dependency>
            <groupId>org.exoplatform.portletcontainer</groupId>
            <artifactId>exo.pc.component.plugins.pc</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
          </dependency>

          <dependency>
            <groupId>org.exoplatform.portletcontainer</groupId>
            <artifactId>exo.pc.component.plugins.wsrp2</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
          </dependency>

          <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.1.2</version>
            <scope>compile</scope>
          </dependency>

          <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>1.1.2</version>
          </dependency>

        </dependencies>

        <build>
          <finalName>portlet-container</finalName>
          <plugins>

      <!--
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-ear-plugin</artifactId>
              <configuration>
                <archive>
                  <manifest>
                    <addClasspath>true</addClasspath>
                  </manifest>
                </archive>
              </configuration>
            </plugin>
      -->

            <plugin>
              <groupId>org.exoplatform.maven.plugins</groupId>
              <artifactId>maven-exopc-plugin</artifactId>
              <extensions>true</extensions>
              <configuration>
                <sharedDir>${basedir}/patches</sharedDir>
                <excludeProjects>
                  junit, jmock, bcel, ehcache,cargo-core-api-container,cargo-core-api-generic,cargo-core-api-module,xercesImpl, msv, servlet-api, jibx-bind, isorelax,
                  relaxngDatatype, cargo-core-api-util, cargo-core-container-tomcat,velocity-dep, saxpath, exo-platform.test.framework,
                  xmldb-api, castor, drools-smftest, jsp-api, xml-apis, xml-resolver, jaxen,
                  xjavadoc, xdoclet-hibernate-module, xdoclet-xdoclet-module, xdoclet,
                  saaj-api, exo-weblogic-authproviders, exo-weblogic-loginmodule,
                  carol, commons-fileupload, commons-io, drools-base, drools-core, drools-java,
                  drools-smf, exo-platform.services.backup.api, exo-platform.services.ldap.api,
                  exo-platform.services.ldap.impl, exo-platform.services.remote.api,
                  exo-platform.services.remote.impl, exo-platform.services.templates.api,
                  exo-platform.services.templates.impl, groovy-all-1.0-jsr, howl-logger, janino,
                  jotm, jotm_jrmp_stubs, log4j, soap, velocity, naming-core, naming-java, jsf-api, xerces
                </excludeProjects>
              </configuration>
            </plugin>

		        <plugin>
			        <artifactId>maven-antrun-plugin</artifactId>
			        <version>1.3</version>
              <executions>
                <execution>
                  <id>1</id>
                  <phase>install</phase>
                  <configuration>
                    <tasks>
       		  <echo>=== To copy the hello.war to the test tomcat 'exo-tomcat'</echo>
	          <echo>TO: ${exo.projects.directory.working}/exo-tomcat/webapps/</echo>
	          <echo>FROM: component/plugins/wsrp2/target/hello.war</echo>
              		<copy todir="${exo.projects.directory.working}/exo-tomcat/webapps/">
		        <fileset dir="../../component/plugins/wsrp2/target/">
			        <include name="**/hello.war" />
		        </fileset>
		        </copy>
	          <echo>=== To remove the portal.xml in /conf/Catalina/localhost, which came as exopc-war patch</echo>
                        <delete file="${exo.projects.directory.working}/exo-tomcat/conf/Catalina/localhost/portal.xml" />
                    </tasks>
                  </configuration>
                  <goals>
                    <goal>run</goal>
                  </goals>
                </execution>
              </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>jonas</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
    	<dependencies>
	      <dependency>
	        <groupId>_jonas_patches</groupId>
	        <artifactId>naming-core</artifactId>
	        <version>0.8</version>
	        <type>jar</type>
	        <scope>compile</scope>
	      </dependency>

        <dependency>
          <groupId>_jonas_patches</groupId>
          <artifactId>naming-java</artifactId>
          <version>0.8</version>
          <type>jar</type>
          <scope>compile</scope>
        </dependency>
                 
	      <dependency>
	        <groupId>_jonas_patches</groupId>
	        <artifactId>stax-api</artifactId>
	        <version>1.0.1</version>
	        <type>jar</type>  
	        <scope>compile</scope>
	      </dependency>

                 <dependency>
                      <groupId>_jonas_patches</groupId>
                      <artifactId>xapool</artifactId>
                     <version>1.5.0</version>
                     <type>jar</type>
                     <scope>compile</scope>
                 </dependency>

	     <dependency>
	          <groupId>_jonas_patches</groupId>
	          <artifactId>mail</artifactId>
	          <version>1.4</version>
	          <type>jar</type>
	          <scope>compile</scope>
	     </dependency>

                 <dependency>
                      <groupId>_jonas_patches</groupId>
                      <artifactId>jsf-api</artifactId>
                     <version>1.2</version>
                     <type>jar</type>
                     <scope>compile</scope>
                 </dependency>
                 
                <dependency>
	          <groupId>_jonas_patches</groupId>
	          <artifactId>jibx-extras</artifactId>
	          <version>1.1.6a</version>
	          <type>jar</type>
	          <scope>compile</scope>
	     </dependency>

                 <dependency>
                      <groupId>_jonas_patches</groupId>
                      <artifactId>jaxb-impl</artifactId>
                     <version>2.0.2</version>
                     <type>jar</type>
                     <scope>compile</scope>
                 </dependency>
              </dependencies>


	    <build>
		    <plugins>
			    <plugin>
				    <artifactId>maven-assembly-plugin</artifactId>
				    <version>2.1</version>
				    <executions>
					    <execution>
						    <phase>install</phase>
						    <goals>
							    <goal>assembly</goal>
						    </goals>
					    </execution>
				    </executions>
				    <configuration>
					    <descriptors>
						    <descriptor>product-descriptor.xml</descriptor>
					    </descriptors>
					    <finalName>lib</finalName>
				    </configuration>
			    </plugin>
			    <plugin>
				    <artifactId>maven-antrun-plugin</artifactId>
				    <configuration>
					    <tasks>
					     	<delete dir="${exo.projects.directory.working}/exo-jonas" includeEmptyDirs="true" quiet="yes" />
						    <copy todir="${exo.projects.directory.working}/exo-jonas" verbose="false" overwrite="true">
							    <fileset dir="${exo.projects.directory.dependencies}/${exo.projects.app.jonas.version}" />
						    </copy>
						    <!-- copy portlet-container.ear to autoload directory-->
						    <copy todir="${exo.projects.directory.working}/exo-jonas/apps/autoload/" verbose="true" overwrite="true">
							    <fileset dir="${basedir}/target/">
							      <filename name="**/*.ear" />
							    </fileset>  
						    </copy>
						    <!-- copy jonas bin -->
			
						    <copy todir="${exo.projects.directory.working}/exo-jonas/bin/" verbose="true" overwrite="true">
							    <fileset dir="${basedir}/patches/jonas/bin"> 
								    <exclude name="**/WEB*" />
							    </fileset>	
						    </copy>
						    <!-- copy jonas conf -->
						    <copy todir="${exo.projects.directory.working}/exo-jonas/conf/" verbose="true" flatten="true" overwrite="true">
							    <fileset dir="${basedir}/patches/jonas/conf" casesensitive="yes">
							    </fileset>
						    </copy>
						    <!-- copy portal.war temporary to jonas autoload -->
						    <copy todir="${exo.projects.directory.working}/exo-jonas/apps/autoload/" verbose="true" overwrite="true">
							    <fileset dir="${basedir}/target/ear/" casesensitive="yes">
            							<filename name="portal.war" />
							    </fileset>
						    </copy>
						
						    <touch file="${basedir}/patches/jonas/WEB-INF/classes/conf/exo-configuration.xml" />
						    <!-- copy WEB-INF to portal.war -->
						    <war destfile="${exo.projects.directory.working}/exo-jonas/apps/autoload/portal.war" update="true">
                 	                                                      <webinf dir="${basedir}/patches/jonas/WEB-INF/">
						          </webinf>
						    </war>
						
					             <touch>
					                        <fileset dir="${basedir}/target/lib-${project.version}.dir/">
						                <filename name="**/*.jar" /> 
						                <exclude name="**/assembly*" />
						             </fileset>
					              </touch>
					            <!-- copy several jars into ear -->  
						    <ear destfile="${exo.projects.directory.working}/exo-jonas/apps/autoload/portlet-container.ear" update="true">
						              <fileset dir="${basedir}/target/lib-${project.version}.dir/">
						                  <filename name="**/*.jar" /> 
						                  <exclude name="**/assembly*" />
						              </fileset>
					               </ear>	
					              <!-- copy modified portal.war --> 
					              <ear destfile="${exo.projects.directory.working}/exo-jonas/apps/autoload/portlet-container.ear" update="true">
						              <fileset dir="${exo.projects.directory.working}/exo-jonas/apps/autoload/">
						                <filename name="portal.war" /> 
						              </fileset>
					               </ear>	
						    <!-- delete temporary file portal.war-->
						    <delete file="${exo.projects.directory.working}/exo-jonas/apps/autoload/portal.war" />
							
						    <delete>
							     <fileset dir="${exo.projects.directory.working}/exo-jonas/lib/endorsed/">
							       <include name="xalan*.jar" /> 
							       <include name="xerces*.jar" /> 
							       <include name="xml*.jar" /> 
						                 </fileset>
					            </delete>
					    </tasks>
				    </configuration>
			    </plugin>
		    </plugins>
	    </build>
    </profile>
    
    <profile>
      <id>jboss-ear</id>
      <activation>
        <activeByDefault>false</activeByDefault>        
      </activation>
      <build>
		    <plugins>
			    <plugin>
				    <artifactId>maven-assembly-plugin</artifactId>
				    <version>2.1</version>
				    <executions>
					    <execution>
						    <phase>install</phase>
						    <goals>
							    <goal>assembly</goal>
						    </goals>
					    </execution>
				    </executions>
				    <configuration>
					    <descriptors>
						    <descriptor>product-descriptor.xml</descriptor>
					    </descriptors>
					    <finalName>lib</finalName>
				    </configuration>
			    </plugin>
			    <plugin>
				    <artifactId>maven-antrun-plugin</artifactId>
				    <configuration>
					    <tasks>
						    <delete dir="${exo.projects.directory.working}/exo-jboss" includeEmptyDirs="true" quiet="yes" />
						    <copy todir="${exo.projects.directory.working}/exo-jboss" verbose="false" overwrite="true">
							    <fileset dir="${exo.projects.directory.dependencies}/${exo.projects.app.jboss.version}" />
						    </copy>
						    <copy todir="${exo.projects.directory.working}/exo-jboss/server/default/deploy/portlet-container.ear" verbose="true" overwrite="true">
							    <fileset dir="${basedir}/target/ear/" excludes="**/*.war" />
						    </copy>
						    <copy todir="${exo.projects.directory.working}/exo-jboss/server/default/deploy/portlet-container.ear" verbose="true" flatten="true" overwrite="true">
							    <fileset dir="${basedir}/target/ear/" casesensitive="yes">
								    <include name="**/*.war" />
								    <exclude name="portal.war" />
							    </fileset>
						    </copy>

                <copy tofile="${exo.projects.directory.working}/exo-jboss/server/default/deploy/portlet-container.ear/01portal.war" file="${basedir}/target/ear/portal.war" />
						          
						    <touch file="${basedir}/patches/jboss/WEB-INF/classes/conf/exo-configuration.xml" />

    <!-- PATCH EAR -->					    						
						    <copy todir="${exo.projects.directory.working}/exo-jboss" verbose="true" overwrite="true">
							    <fileset dir="${basedir}/patches/jboss-ear/jbosshome/"> 
							    </fileset>	
						    </copy>
						
						    <war destfile="${exo.projects.directory.working}/exo-jboss/server/default/deploy/portlet-container.ear/01portal.war" update="true">
                 	                                                      <webinf dir="${basedir}/patches/jboss/WEB-INF/">
						         </webinf>
						    </war>

    <!-- PATCH SERVER -->
						    <copy todir="${exo.projects.directory.working}/exo-jboss" verbose="true" overwrite="true">
							    <fileset dir="${basedir}/patches/jboss/jbosshome/"> 
							    </fileset>	
						    </copy>

    <!-- EXOMAN due to removed jboss-app.xml
					                 <delete file="${exo.projects.directory.working}/exo-jboss/server/default/deploy/portlet-container.ear/jtidy-4aug2000r7-dev.jar" />
    -->

    <!--
						    <delete file="${exo.projects.directory.working}/exo-jboss/server/default/lib/hsqldb.jar" />
    -->
    <!--					             <delete file="${exo.projects.directory.working}/exo-jboss/server/default/deploy/portlet-container.ear/demos.war" />
    -->

					    </tasks>
				    </configuration>
			    </plugin>
		    </plugins>
	    </build>
    </profile>
    
    <profile>
      <id>jboss-sar</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      
      <build>
		<plugins>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.1</version>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>assembly</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<descriptors>
						<descriptor>product-descriptor.xml</descriptor>
					</descriptors>
					<finalName>lib</finalName>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<configuration>
					<tasks>
						<delete dir="${exo.projects.directory.working}/exo-jboss" includeEmptyDirs="true" quiet="yes" />
						<copy todir="${exo.projects.directory.working}/exo-jboss" verbose="false" overwrite="true">
							<fileset dir="${exo.projects.directory.dependencies}/${exo.projects.app.jboss.version}" />
						</copy>
						<copy todir="${exo.projects.directory.working}/exo-jboss/server/default/deploy/portlet-container.sar" verbose="true" overwrite="true">
							<fileset dir="${basedir}/target/ear/" excludes="**/*.war" />
						</copy>
						<copy todir="${exo.projects.directory.working}/exo-jboss/server/default/deploy/portlet-container.sar" verbose="true" flatten="true" overwrite="true">
							<fileset dir="${basedir}/target/ear/" casesensitive="yes">
								<include name="**/*.war" />
								<exclude name="portal.war" />
							</fileset>
						</copy>
						
                                                <copy tofile="${exo.projects.directory.working}/exo-jboss/server/default/deploy/portlet-container.sar/01portal.war" file="${basedir}/target/ear/portal.war" overwrite="true" />


						<touch file="${basedir}/patches/jboss/WEB-INF/classes/conf/exo-configuration.xml" />

<!-- PATCH SAR -->					    						
						<copy todir="${exo.projects.directory.working}/exo-jboss" verbose="true" overwrite="true">
							<fileset dir="${basedir}/patches/jboss-sar/jbosshome/"> 
							</fileset>	
						</copy>
						
						<war destfile="${exo.projects.directory.working}/exo-jboss/server/default/deploy/portlet-container.sar/01portal.war" update="true">
             	                                                      <webinf dir="${basedir}/patches/jboss/WEB-INF/">
						     </webinf>
						</war>

<!-- PATCH SERVER -->
						<copy todir="${exo.projects.directory.working}/exo-jboss" verbose="true" overwrite="true">
							<fileset dir="${basedir}/patches/jboss/jbosshome/"> 
							</fileset>	
						</copy>

<!--
                                                <copy tofile="${exo.projects.directory.working}/exo-jboss/server/default/deploy/jboss-web.deployer/server.xml" file="${basedir}/patches/jboss-sar/jboss-web.deployer/server.xml" overwrite="true" />

                                                <copy tofile="${exo.projects.directory.working}/exo-jboss/bin/run.conf" file="${basedir}/patches/jboss-sar/run.conf" overwrite="true" />
-->
<!--
						<delete file="${exo.projects.directory.working}/exo-jboss/server/default/lib/hsqldb.jar" />
-->
<!--					             <delete file="${exo.projects.directory.working}/exo-jboss/server/default/deploy/portlet-container.sar/demos.war" />
-->
					</tasks>
				</configuration>
			</plugin>
		</plugins>
	</build>
	
    </profile>
    
  </profiles>
  
  <build>
    <finalName>portlet-container</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-ear-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.exoplatform.maven.plugins</groupId>
        <artifactId>maven-exopc-plugin</artifactId>
        <configuration>
          <sharedDir>${basedir}/patches</sharedDir>
          <excludeProjects>junit, jmock, bcel, ehcache,cargo-core-api-container,cargo-core-api-generic,cargo-core-api-module,xercesImpl, msv, servlet-api, jibx-bind, isorelax,
            relaxngDatatype, cargo-core-api-util, cargo-core-container-tomcat,velocity-dep, saxpath, exo-platform.test.framework,
            xmldb-api, castor, drools-smftest, jsp-api, xml-apis, xml-resolver, jaxen,
            xjavadoc, xdoclet-hibernate-module, xdoclet-xdoclet-module, xdoclet,
            saaj-api, exo-weblogic-authproviders, exo-weblogic-loginmodule,
            carol, drools-base, drools-core, drools-java,
            drools-smf, exo-platform.services.backup.api, exo-platform.services.ldap.api,
            exo-platform.services.ldap.impl, exo-platform.services.remote.api,
            exo-platform.services.remote.impl, exo-platform.services.templates.api,
            exo-platform.services.templates.impl, groovy-all-1.0-jsr, howl-logger, janino,
            jotm, jotm_jrmp_stubs, log4j, soap, velocity, naming-core, naming-java, jsf-api, xerces</excludeProjects>
        </configuration>
        <extensions>true</extensions>
      </plugin>
    </plugins>
  </build>
</project>
