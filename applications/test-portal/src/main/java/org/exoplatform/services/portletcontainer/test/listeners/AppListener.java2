/**
 * Copyright 2001-2003 The eXo Platform SARL         All rights reserved.  *
 * Please look at license.txt in info directory for more license detail.   *
 */

package org.exoplatform.services.portletcontainer.test.listeners;

import java.util.HashMap;

import javax.portlet.PortletContext;
import javax.portlet.PortletMode;
import javax.portlet.WindowState;
import javax.servlet.ServletContext;
import javax.servlet.ServletContextEvent;
import javax.servlet.ServletContextListener;

import org.exoplatform.Constants;
import org.exoplatform.container.PortalContainer;
import org.exoplatform.container.RootContainer;
import org.exoplatform.services.portletcontainer.PortletApplicationRegister;
import org.exoplatform.services.portletcontainer.PortletContainerService;
import org.exoplatform.services.portletcontainer.impl.PortletContainerServiceImpl;
import org.exoplatform.services.portletcontainer.pci.ExoWindowID;
import org.exoplatform.services.portletcontainer.pci.RenderInput;

/**
 * Created by The eXo Platform SARL .
 * 
 * @author <a href="mailto:lautarul@gmail.com">Roman Pedchenko</a>
 * @version $Id$
 */

public class AppListener implements ServletContextListener {
  
  public void contextInitialized(ServletContextEvent sce) {
    try {
      ServletContext ctx = sce.getServletContext();
    
System.out.println("about to create root container");
      RootContainer rootContainer = RootContainer.getInstance();
System.out.println("got, about to create portal container");
      PortalContainer portalContainer = rootContainer.createPortalContainer(ctx);

      PortletContainerServiceImpl portletContainer = (PortletContainerServiceImpl) portalContainer.getComponentInstanceOfType(PortletContainerService.class);
System.out.println("got portlet container");
      PortletApplicationRegister portletApplicationRegister = (PortletApplicationRegister)portalContainer.getComponentInstanceOfType(PortletApplicationRegister.class);
System.out.println("got portlet app register");

// -------------
    java.net.URL url = ctx.getResource("/WEB-INF/portlet.xml");
System.out.println("got url");
    java.io.InputStream is = url.openStream();
System.out.println("got stream");
    org.exoplatform.services.portletcontainer.pci.model.PortletApp portletApp =
      org.exoplatform.services.portletcontainer.pci.model.XMLParser.parse(is);
System.out.println("parsed stream");
    
    java.util.ArrayList roles = new java.util.ArrayList();
    roles.add("auth-user");
System.out.println("created roles, about to register the application");

    portletApplicationRegister.registerPortletApplication(ctx, portletApp, roles);
System.out.println("app registered");
// -------------
      
      ExoWindowID windowID = new ExoWindowID();
      windowID.setOwner(Constants.ANON_USER);
      windowID.setPortletApplicationName("prtlttest");
      windowID.setUniqueID("windowID");
      windowID.setPersistenceId("persistenceID");
      
      RenderInput renderInput = new RenderInput();
      renderInput.setBaseURL("view.jsp");
      renderInput.setWindowID(windowID);
      renderInput.setUserAttributes(new HashMap());
      renderInput.setPortletMode(PortletMode.VIEW);
      renderInput.setWindowState(WindowState.NORMAL);
      renderInput.setMarkup("text/html");
      renderInput.setRenderParameters(new HashMap());
    
      ctx.setAttribute("renderInput", renderInput);
    } catch (Exception e) {
      System.out.println(" !!! AppListener.contextInitialized exception: " + e);
      e.printStackTrace();
    }
  }
  
  public void contextDestroyed(ServletContextEvent sce) {
  }
  
}
