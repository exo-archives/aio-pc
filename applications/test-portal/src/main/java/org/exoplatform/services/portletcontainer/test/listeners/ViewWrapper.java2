/**
 * Copyright 2001-2003 The eXo platform SARL All rights reserved.
 * Please look at license.txt in info directory for more license detail.
 **/

package org.exoplatform.services.portletcontainer.test.listeners;

import java.util.Locale;
import java.util.ResourceBundle;
import java.util.HashMap;

import javax.portlet.PortletMode;
import javax.portlet.WindowState;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.logging.Log;
import org.exoplatform.Constants;
import org.exoplatform.container.RootContainer;
import org.exoplatform.services.log.LogService;
import org.exoplatform.services.portletcontainer.PortletContainerException;
import org.exoplatform.services.portletcontainer.helper.PortletWindowInternal;
import org.exoplatform.services.portletcontainer.impl.PortletApplicationHandler;
import org.exoplatform.services.portletcontainer.impl.PortletContainerDispatcher;
import org.exoplatform.services.portletcontainer.pci.ExoWindowID;
import org.exoplatform.services.portletcontainer.pci.Input;
import org.exoplatform.services.portletcontainer.pci.RenderInput;
import org.exoplatform.services.portletcontainer.pci.RenderOutput;
import org.exoplatform.services.portletcontainer.pci.Output;
import org.exoplatform.services.portletcontainer.pci.WindowID;

/**
 * Created by The eXo Platform SARL .
 * 
 * @author <a href="mailto:lautarul@gmail.com">Roman Pedchenko</a>
 * @version $Id$
 */

public class ViewWrapper extends HttpServlet {

  public void init(ServletConfig servletConfig) throws ServletException {
    super.init(servletConfig);
  }

  protected PortletWindowInternal createWindowInfo(HttpServletRequest servletRequest, String portletName) {
    ExoWindowID windowID = new ExoWindowID();
    windowID.setOwner(Constants.ANON_USER);
    windowID.setPortletApplicationName(getServletName());
    windowID.setUniqueID("windowID");
    windowID.setPersistenceId("persistenceID");
    windowID.setPortletName(portletName);

    PortletWindowInternal windowInfo = new PortletWindowInternal(windowID, null);

    servletRequest.setAttribute(PortletContainerDispatcher.WINDOW_INFO, windowInfo);
    return windowInfo;
  }

  protected Input createInput(HttpServletRequest servletRequest, WindowID windowID) {
    RenderInput renderInput = new RenderInput();
    renderInput.setBaseURL("");
    renderInput.setWindowID(windowID);
    renderInput.setUserAttributes(new HashMap());
    renderInput.setPortletMode(PortletMode.VIEW);
    renderInput.setWindowState(WindowState.NORMAL);
    renderInput.setMarkup("text/html");
    renderInput.setRenderParameters(new HashMap());

    servletRequest.setAttribute(PortletContainerDispatcher.INPUT, renderInput);
    return renderInput;
  }

  protected Output createOutput(HttpServletRequest servletRequest) {
    Output output = new RenderOutput();

    servletRequest.setAttribute(PortletContainerDispatcher.OUTPUT, output);
    return output;
  }

  protected void showContainer(RootContainer ct) {
    System.out.println("  >>>>>>>>>>>>>> all types registered in root container");
    java.util.Collection c = ct.getComponentAdapters();
    java.util.Iterator i = c.iterator();
    while (i.hasNext()) {
      org.picocontainer.ComponentAdapter a = (org.picocontainer.ComponentAdapter) i.next();
      System.out.println("   ---- " + a.getComponentKey() + ": " + a.getComponentImplementation().getName());
    }
    System.out.println("  >>>>>>>>>>>>>>");
  }

  protected void registerPortletContainerClasses(RootContainer ct) {
    ct.registerComponentImplementation(org.exoplatform.services.portletcontainer.PortletContainerService.class,
      org.exoplatform.services.portletcontainer.impl.PortletContainerServiceImpl.class);
    ct.registerComponentImplementation(org.exoplatform.services.portletcontainer.impl.PortletContainerDispatcher.class);
    ct.registerComponentImplementation(org.exoplatform.services.portletcontainer.impl.PortletApplicationHandler.class);
    ct.registerComponentImplementation(javax.portlet.PortalContext.class,
      org.exoplatform.services.portletcontainer.impl.portletAPIImp.PortalContextImp.class);
    ct.registerComponentImplementation(org.exoplatform.services.portletcontainer.impl.portletAPIImp.persistenceImp.PersistenceManager.class,
      org.exoplatform.services.portletcontainer.impl.portletAPIImp.persistenceImp.DefaultPersistenceManager.class);
    ct.registerComponentImplementation(org.exoplatform.services.portletcontainer.impl.portletAPIImp.bundle.ResourceBundleManager.class);
  }

  protected void service(HttpServletRequest servletRequest, HttpServletResponse servletResponse)
                  throws ServletException, java.io.IOException {
    RootContainer manager = RootContainer.getInstance();
    
    PortletWindowInternal windowInfo = (PortletWindowInternal) servletRequest.getAttribute(PortletContainerDispatcher.WINDOW_INFO);
    Input input = (Input) servletRequest.getAttribute(PortletContainerDispatcher.INPUT);
    Output output = (Output) servletRequest.getAttribute(PortletContainerDispatcher.OUTPUT);
    if (windowInfo == null) {
      windowInfo = createWindowInfo(servletRequest, "HelloWorld"); // !!! fix this
      registerPortletContainerClasses(manager);
    }
///
//showContainer(manager);
///
    PortletApplicationHandler handler = (PortletApplicationHandler) manager.getComponentInstanceOfType(PortletApplicationHandler.class);
    if (input == null)
      input = createInput(servletRequest, windowInfo.getWindowID());
    if (output == null)
      output = createOutput(servletRequest);
		boolean isAction = false; // ((Boolean)servletRequest.getAttribute(PortletContainerDispatcher.IS_ACTION)).booleanValue();
		try {			      
			handler.process(getServletContext(), servletRequest,
							        servletResponse, input, output, windowInfo, isAction);
		} catch (PortletContainerException e) {
			throw new ServletException("An error occured while processing the portlet request", e);
		}
	}
}
