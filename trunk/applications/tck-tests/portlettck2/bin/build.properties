#####################################################################
#The following properties must be set prior to running the PORTLET API tests 
#
# webapp.dir
# portlet.classes
# j2ee.home.ri      (Needed for building tests and running against RI)
#
##########################################################################

##########################################################################
# This property is used by tsant to copy all of the PORTLET 
# web applications in single directory. 
# Otherwise, webapplications are available in the dist directory. 
# vendors would need to deploy these applications using their implementation 
# specific tools.
# e.g. On windows webapp.dir=C:/RI/portlets
# e.g. On unix webapp.dir=/tmp/webapps
##########################################################################
webapp.dir=C:/tmp/webapps

##########################################################################
# The jars/classes needed for building/packaging
# You would need to set this property only if you are building 
# the TCK or the TCK web applications.
# download j2ee 1.3 SDK from Java site
#e.g. On windows j2ee.home.ri=C:/j2ee/j2sdkee
#e.g. On unix j2ee.home.ri=/u/mjain/j2ee/j2sdkee
##########################################################################

# TODO: For development purposes we read the J2EE_HOME variable from the
# system environment

j2ee.home.ri=${env.J2EE_HOME}
j2ee.classes.ri=${j2ee.home.ri}/lib/j2ee.jar


##########################################################################
# The classes for the PORTLET api's
# This property is set to work for Reference Implementation.
# Vendors should set this to the jar file containing the 
# PORTLET api. This is used for signature testing.
##########################################################################
portlet.classes=${ts.home}/lib/portlet-api-2.0.jar
#portlet.classes=${ts.home}/lib/portlet.jar

##########################################################################
# Include the TS harness libs - tsharness.jar,
# javatest.jar - the test classes and any tck specific jars.
# Leave as the default
##########################################################################
local.classes=${ts.home}/lib/jdom.jar:${ts.home}/lib/jaxp-api.jar:${ts.home}/lib/sax.jar:${ts.home}/lib/xercesImpl.jar:${ts.home}/lib/dom.jar:${ts.home}/lib/tsharness.jar:${ts.home}/lib/portlettck.jar:${ts.home}/lib/javatest.jar:${ts.home}/classes:${portlet.classes}:${ts.home}/lib/commons-httpclient.jar:${ts.home}/lib/apiCheck.jar:${ts.home}/lib/commons-logging.jar:${ts.home}/lib/jaxb-api-2.1.jar:${ts.home}/lib/j2ee.jar:${ts.home}/lib/ccpp-1.0.jar


##########################################################################
# The J2EE server jar, the TS harness libs -
# tsharness.jar, parser.jar and javatest.jar - the test classes and any tck
# specific jars.
# Leave as the default
##########################################################################
ts.classpath=${j2ee.classes.ri}:${local.classes}:${ts.home}/lib/parser.jar:${env.JAVA_HOME}/lib/tools.jar


##########################################################################
#build level
#2: compile and build component archives (war's)
# leave as default
##########################################################################
build.level=2

##########################################################################
# Default client used for tests
##########################################################################
test.client=URLClient.java

##########################################################################
# Set your local timezone. For valid values, consult your Operating System
# documentation.
##########################################################################
tz=US/Eastern

##########################################################################
# Needed for building/packaging
# leave as default
##########################################################################
deliverable.class=com.sun.ts.lib.deliverable.pct.PCTDeliverable

########################################################################
#These properties are used by the harness.
#
# "harness.executeMode" is used to run the harness in the following modes
# of execution. Leave this as default
########################################################################
harness.executeMode=2
