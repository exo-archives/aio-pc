/*
 * Copyright 2003 Sun Microsystems, Inc. All rights reserved.
 * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 */

package com.sun.ts.lib.porting;

import com.sun.ts.tests.portlet.common.client.TSPortletInfo;

/** Every vendor using JSR168 TCK must provide implementation of this interface.
  * The main purpose of TSPortletContainerURLInterface interface is aggregation of 
  * portlets. This is required as aggregation of portlets is not defined by the Portlet spec 
  * and is implementation specific. Methods in this interface take a list of 
  * portlets and return a relative URL.
  * A http request using this URL , must result in a portal page, that aggregates the 
  * content generated by the specified test portlets. 
  */
public interface TSPortletContainerURLInterface
{
	/**
	  * This method is called by TS tests to get the URL( relative) that would result in 
	  * aggregation of given set of portlets in a portal page.
	  * The desired Window State and Potlet Mode is provided as part of the input 
	  * paramaters. If window state and portlet mode is not provided, the defaults from 
	  * Deployment Descriptor must be assumed.
	  *
	  * @param 		 portletInfos - an array of PortletInfos
	  * @return      a valid URL string.
	  */

	public String createURL(
					 TSPortletInfo[] portletInfos);
	
    
    /**
     * This overloaded method in TSPortletContainerURLInterface, provides a similar functionality as described for previous method, with a 
     * slight variation. This method also takes a portletURL string as constructed by RenderResponse.createURL() in a test portlet. Besides 
     * aggregating content of the listed portlets, resulting portal page must include the portlet as described by the portletURL input parameter.
     * 
     * @param portletInfos - an array of PortletInfos
     * @param portletURL String returned by a RenderResponse.createURL()
     * @return a valid URL string aggregating all.
     */
    public String createReturnURL(TSPortletInfo[] portletInfos, String portletURL );




					 
}




