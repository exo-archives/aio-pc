Index: component/plugins/wsrp1/src/test/java/org/exoplatform/services/wsrp/test/BaseTest.java
===================================================================
--- component/plugins/wsrp1/src/test/java/org/exoplatform/services/wsrp/test/BaseTest.java	(revision 79426)
+++ component/plugins/wsrp1/src/test/java/org/exoplatform/services/wsrp/test/BaseTest.java	(working copy)
@@ -30,6 +30,7 @@
 import org.exoplatform.services.portletcontainer.pci.model.PortletApp;
 import org.exoplatform.services.portletcontainer.plugins.pc.PortletApplicationsHolder;
 import org.exoplatform.services.portletcontainer.plugins.pc.replication.FakeHttpResponse;
+import org.exoplatform.services.wsrp.TestConfigurationUtil;
 import org.exoplatform.services.wsrp.intf.WSRP_v1_Markup_PortType;
 import org.exoplatform.services.wsrp.intf.WSRP_v1_PortletManagement_PortType;
 import org.exoplatform.services.wsrp.intf.WSRP_v1_Registration_PortType;
@@ -61,8 +62,6 @@
 import java.util.GregorianCalendar;
 import java.util.Locale;
 
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
 import javax.xml.rpc.Call;
 
 /**
@@ -71,7 +70,9 @@
  */
 public class BaseTest extends TestCase {
 
-  protected static final String                 SERVICE_URL              = "http://localhost:8080/hello/services/";
+  protected static final String                 SERVICE_URL              = "http://localhost:"
+                                                                             + TestConfigurationUtil.getTestPort()
+                                                                             + "/hello/services/";
 
   protected static final String                 CONTEXT_PATH             = "hello";
 
@@ -237,8 +238,8 @@
 
     mockServletRequest = new MockServletRequest(new MockHttpSession(), new Locale("en"));
     mockServletResponse = new MockServletResponse(new FakeHttpResponse());
-    WSRPHTTPContainer.createInstance((HttpServletRequest) mockServletRequest,
-                                     (HttpServletResponse) mockServletResponse);
+    WSRPHTTPContainer.createInstance(mockServletRequest,
+                                     mockServletResponse);
   }
 
   public void tearDown() throws Exception {
Index: component/plugins/wsrp1/src/test/java/org/exoplatform/services/wsrp/TestConfigurationUtil.java
===================================================================
--- component/plugins/wsrp1/src/test/java/org/exoplatform/services/wsrp/TestConfigurationUtil.java	(revision 0)
+++ component/plugins/wsrp1/src/test/java/org/exoplatform/services/wsrp/TestConfigurationUtil.java	(revision 0)
@@ -0,0 +1,39 @@
+/*
+ * Copyright (C) 2012 eXo Platform SAS.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.exoplatform.services.wsrp;
+
+/**
+ * @author <a href="abazko@exoplatform.com">Anatoliy Bazko</a>
+ * @version $Id: TestConfigurationUtil.java 34360 2009-07-22 23:58:59Z tolusha $
+ */
+public class TestConfigurationUtil {
+
+  public static final String DEFAULT_TEST_PORT = "8080";
+
+  public static String getTestPort() {
+    String port = System.getProperty("testPort");
+    if (port == null) {
+      return DEFAULT_TEST_PORT;
+    } else if (port.startsWith("${")) {
+      return DEFAULT_TEST_PORT;
+    } else {
+      return port;
+    }
+  }
+}
Index: component/plugins/wsrp1/src/test/java/org/exoplatform/services/wsrp/ContainerStarter.java
===================================================================
--- component/plugins/wsrp1/src/test/java/org/exoplatform/services/wsrp/ContainerStarter.java	(revision 79426)
+++ component/plugins/wsrp1/src/test/java/org/exoplatform/services/wsrp/ContainerStarter.java	(working copy)
@@ -22,12 +22,6 @@
  * max.shaposhnik@exoplatform.com.ua 15.07.2008
  */
 
-import java.io.File;
-import java.io.FilenameFilter;
-import java.net.MalformedURLException;
-import java.util.ArrayList;
-import java.util.List;
-
 import org.codehaus.cargo.container.ContainerType;
 import org.codehaus.cargo.container.InstalledLocalContainer;
 import org.codehaus.cargo.container.configuration.ConfigurationType;
@@ -39,6 +33,12 @@
 import org.codehaus.cargo.generic.DefaultContainerFactory;
 import org.codehaus.cargo.generic.configuration.DefaultConfigurationFactory;
 
+import java.io.File;
+import java.io.FilenameFilter;
+import java.net.MalformedURLException;
+import java.util.ArrayList;
+import java.util.List;
+
 public class ContainerStarter {
 
   private static InstalledLocalContainer container;
@@ -65,7 +65,7 @@
                                                                                                                     ContainerType.INSTALLED,
                                                                                                                     ConfigurationType.STANDALONE);
 
-      configuration.setProperty(ServletPropertySet.PORT, "8080");
+      configuration.setProperty(ServletPropertySet.PORT, TestConfigurationUtil.getTestPort());
       System.setProperty("catalina.home", installer.getHome());
 
       configuration.addDeployable(new WAR(PORTLET_WAR_PATH));
Index: component/plugins/wsrp1/pom.xml
===================================================================
--- component/plugins/wsrp1/pom.xml	(revision 79426)
+++ component/plugins/wsrp1/pom.xml	(working copy)
@@ -445,16 +445,42 @@
                 </goals>
               </execution>
               <execution>
-                <id>5</id>
+               <id>5</id>
                 <phase>generate-test-sources</phase>
                 <configuration>
                   <tasks>
-                    <war destfile="target/hello.war" webxml="war_template/WEB-INF/web.xml">
+                    <mkdir dir="${basedir}/target/war_template/WEB-INF"/>
+                    <copy todir="${basedir}/target/war_template/WEB-INF">
+                      <fileset dir="${basedir}/war_template/WEB-INF"/>
+                    </copy>
+                  </tasks>
+                </configuration>
+                <goals>
+                  <goal>run</goal>
+                </goals>
+              </execution>
+              <execution>
+                <id>6</id>
+                <phase>generate-test-sources</phase>
+                <configuration>
+                  <tasks if="pc.test.port">
+                    <replace file="${basedir}/target/war_template/WEB-INF/web.xml" token="localhost:8080" value="localhost:${pc.test.port}" />
+                  </tasks>
+                </configuration>
+                <goals>
+                  <goal>run</goal>
+                </goals>
+              </execution>
+              <execution>
+                <id>7</id>
+                <phase>generate-test-sources</phase>
+                <configuration>
+                  <tasks>
+                    <war destfile="target/hello.war" webxml="target/war_template/WEB-INF/web.xml">
                       <classes dir="target/test-classes">
                         <exclude name="wsrp/**/*" />
                       </classes>
-                      <zipfileset dir="war_template/WEB-INF" includes="**/*" prefix="WEB-INF" />
-                      <!-- zipfileset dir="war_template/WEB-INF" includes="conf**/*" prefix="WEB-INF/classes" / -->
+                      <zipfileset dir="target/war_template/WEB-INF" includes="**/*" prefix="WEB-INF" />
                     </war>
                   </tasks>
                 </configuration>
@@ -463,7 +489,7 @@
                 </goals>
               </execution>
               <execution>
-                <id>6</id>
+                <id>8</id>
                 <phase>generate-test-sources</phase>
                 <configuration>
                   <tasks>
@@ -510,6 +536,10 @@
             <configuration>
               <systemProperties>
                 <property>
+                  <name>testPort</name>
+                  <value>${pc.test.port}</value>
+                </property>
+                <property>
                   <name>testPath</name>
                   <value>${basedir}</value>
                 </property>
@@ -800,18 +830,43 @@
                   <goal>run</goal>
                 </goals>
               </execution>
-
               <execution>
-                <id>5</id>
+               <id>5</id>
                 <phase>generate-test-sources</phase>
                 <configuration>
                   <tasks>
-                    <war destfile="target/hello.war" webxml="war_template/WEB-INF/web.xml">
+                    <mkdir dir="${basedir}/target/war_template/WEB-INF"/>
+                    <copy todir="${basedir}/target/war_template/WEB-INF">
+                      <fileset dir="${basedir}/war_template/WEB-INF"/>
+                    </copy>
+                  </tasks>
+                </configuration>
+                <goals>
+                  <goal>run</goal>
+                </goals>
+              </execution>
+              <execution>
+                <id>6</id>
+                <phase>generate-test-sources</phase>
+                <configuration>
+                  <tasks if="pc.test.port">
+                    <replace file="${basedir}/target/war_template/WEB-INF/web.xml" token="localhost:8080" value="localhost:${pc.test.port}" />
+                  </tasks>
+                </configuration>
+                <goals>
+                  <goal>run</goal>
+                </goals>
+              </execution>
+              <execution>
+                <id>7</id>
+                <phase>generate-test-sources</phase>
+                <configuration>
+                  <tasks>
+                    <war destfile="target/hello.war" webxml="target/war_template/WEB-INF/web.xml">
                       <classes dir="target/test-classes">
                         <exclude name="wsrp/**/*" />
                       </classes>
-                      <zipfileset dir="war_template/WEB-INF" includes="**/*" prefix="WEB-INF" />
-                      <!-- zipfileset dir="war_template/WEB-INF" includes="conf**/*" prefix="WEB-INF/classes" / -->
+                      <zipfileset dir="target/war_template/WEB-INF" includes="**/*" prefix="WEB-INF" />
                     </war>
                   </tasks>
                 </configuration>
@@ -835,6 +890,10 @@
             <configuration>
               <systemProperties>
                 <property>
+                  <name>testPort</name>
+                  <value>${pc.test.port}</value>
+                </property>
+                <property>
                   <name>testPath</name>
                   <value>${basedir}</value>
                 </property>
@@ -1006,21 +1065,47 @@
             <phase>generate-test-sources</phase>
             <configuration>
               <tasks>
-                <war destfile="target/hello.war" webxml="war_template/WEB-INF/web.xml">
+                <mkdir dir="${basedir}/target/war_template/WEB-INF"/>
+                <copy todir="${basedir}/target/war_template/WEB-INF">
+                  <fileset dir="${basedir}/war_template/WEB-INF"/>
+                </copy>
+              </tasks>
+            </configuration>
+            <goals>
+              <goal>run</goal>
+            </goals>
+          </execution>
+          <execution>
+            <id>6</id>
+            <phase>generate-test-sources</phase>
+            <configuration>
+              <tasks if="pc.test.port">
+                <replace file="${basedir}/target/war_template/WEB-INF/web.xml" token="localhost:8080" value="localhost:${pc.test.port}" />
+              </tasks>
+            </configuration>
+            <goals>
+              <goal>run</goal>
+            </goals>
+          </execution>
+          <execution>
+            <id>7</id>
+            <phase>generate-test-sources</phase>
+            <configuration>
+              <tasks>
+                <war destfile="target/hello.war" webxml="target/war_template/WEB-INF/web.xml">
                   <classes dir="target/test-classes">
                     <exclude name="wsrp/**/*" />
                   </classes>
-                  <zipfileset dir="war_template/WEB-INF" includes="**/*" prefix="WEB-INF" />
+                  <zipfileset dir="target/war_template/WEB-INF" includes="**/*" prefix="WEB-INF" />
                 </war>
               </tasks>
             </configuration>
-            <!-- zipfileset dir="war_template/WEB-INF" includes="conf**/*" prefix="WEB-INF/classes" / -->
             <goals>
               <goal>run</goal>
             </goals>
           </execution>
           <execution>
-            <id>6</id>
+            <id>8</id>
             <phase>generate-test-sources</phase>
             <configuration>
               <tasks>
@@ -1066,6 +1151,10 @@
         <configuration>
           <systemProperties>
             <property>
+              <name>testPort</name>
+              <value>${pc.test.port}</value>
+            </property>
+            <property>
               <name>testPath</name>
               <value>${basedir}</value>
             </property>
Index: component/plugins/wsrp2/src/test/java/org/exoplatform/services/wsrp2/test/BaseTest.java
===================================================================
--- component/plugins/wsrp2/src/test/java/org/exoplatform/services/wsrp2/test/BaseTest.java	(revision 79426)
+++ component/plugins/wsrp2/src/test/java/org/exoplatform/services/wsrp2/test/BaseTest.java	(working copy)
@@ -31,6 +31,7 @@
 import org.exoplatform.services.portletcontainer.plugins.pc.PortletApplicationsHolder;
 import org.exoplatform.services.portletcontainer.plugins.pc.replication.FakeHttpResponse;
 import org.exoplatform.services.wsrp2.ContainerStarter;
+import org.exoplatform.services.wsrp2.TestConfigurationUtil;
 import org.exoplatform.services.wsrp2.intf.WSRP_v2_Markup_PortType;
 import org.exoplatform.services.wsrp2.intf.WSRP_v2_PortletManagement_PortType;
 import org.exoplatform.services.wsrp2.intf.WSRP_v2_Registration_PortType;
@@ -83,7 +84,9 @@
  */
 public class BaseTest extends TestCase {
 
-  protected static final String                 SERVICE_URL              = "http://localhost:8080/hello/services2/";
+  protected static final String                 SERVICE_URL              = "http://localhost:"
+                                                                             + TestConfigurationUtil.getTestPort()
+                                                                             + "/hello/services2/";
 
   protected static final String                 CONTEXT_PATH             = "hello";
 
@@ -93,7 +96,7 @@
   //protected static final String                 PORTLET_APP_PATH         = "file:" + TEST_PATH + CONTEXT_PATH;
 
   protected static final String                 serviceUrlString         = SERVICE_URL.substring(0,
-                                                                                                 SERVICE_URL.length() - 1);
+                                                                                                 SERVICE_URL.length() - 1);                          ;
 
   protected static final String                 consumerAgent            = "exoplatform.2.0";
   
@@ -322,8 +325,8 @@
 
     mockServletRequest = new MockServletRequest(new MockHttpSession(), new Locale("en"));
     mockServletResponse = new MockServletResponse(new FakeHttpResponse());
-    WSRPHTTPContainer.createInstance((HttpServletRequest) mockServletRequest,
-                                     (HttpServletResponse) mockServletResponse);
+    WSRPHTTPContainer.createInstance(mockServletRequest,
+                                     mockServletResponse);
   }
 
   public void tearDown() throws Exception {
Index: component/plugins/wsrp2/src/test/java/org/exoplatform/services/wsrp2/TestConfigurationUtil.java
===================================================================
--- component/plugins/wsrp2/src/test/java/org/exoplatform/services/wsrp2/TestConfigurationUtil.java	(revision 0)
+++ component/plugins/wsrp2/src/test/java/org/exoplatform/services/wsrp2/TestConfigurationUtil.java	(revision 0)
@@ -0,0 +1,39 @@
+/*
+ * Copyright (C) 2012 eXo Platform SAS.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.exoplatform.services.wsrp2;
+
+/**
+ * @author <a href="abazko@exoplatform.com">Anatoliy Bazko</a>
+ * @version $Id: TestConfigurationUtil.java 34360 2009-07-22 23:58:59Z tolusha $
+ */
+public class TestConfigurationUtil {
+
+  public static final String DEFAULT_TEST_PORT = "8080";
+
+  public static String getTestPort() {
+    String port = System.getProperty("testPort");
+    if (port == null) {
+      return DEFAULT_TEST_PORT;
+    } else if (port.startsWith("${")) {
+      return DEFAULT_TEST_PORT;
+    } else {
+      return port;
+    }
+  }
+}
Index: component/plugins/wsrp2/src/test/java/org/exoplatform/services/wsrp2/ContainerStarter.java
===================================================================
--- component/plugins/wsrp2/src/test/java/org/exoplatform/services/wsrp2/ContainerStarter.java	(revision 79426)
+++ component/plugins/wsrp2/src/test/java/org/exoplatform/services/wsrp2/ContainerStarter.java	(working copy)
@@ -38,6 +38,7 @@
 import org.codehaus.cargo.container.property.ServletPropertySet;
 import org.codehaus.cargo.generic.DefaultContainerFactory;
 import org.codehaus.cargo.generic.configuration.DefaultConfigurationFactory;
+import org.exoplatform.services.wsrp2.TestConfigurationUtil;
 
 public class ContainerStarter {
 
@@ -66,7 +67,7 @@
                                                                                                                     ContainerType.INSTALLED,
                                                                                                                     ConfigurationType.STANDALONE);
 
-      configuration.setProperty(ServletPropertySet.PORT, "8080");
+      configuration.setProperty(ServletPropertySet.PORT, TestConfigurationUtil.getTestPort());
       System.setProperty("catalina.home", installer.getHome());
 
       configuration.addDeployable(new WAR(PORTLET_WAR_PATH));
Index: component/plugins/wsrp2/pom.xml
===================================================================
--- component/plugins/wsrp2/pom.xml	(revision 79426)
+++ component/plugins/wsrp2/pom.xml	(working copy)
@@ -460,16 +460,42 @@
                 </goals>
               </execution>
               <execution>
-                <id>5</id>
+               <id>5</id>
                 <phase>generate-test-sources</phase>
                 <configuration>
                   <tasks>
-                    <war destfile="target/hello.war" webxml="war_template/WEB-INF/web.xml">
+                    <mkdir dir="${basedir}/target/war_template/WEB-INF"/>
+                    <copy todir="${basedir}/target/war_template/WEB-INF">
+                      <fileset dir="${basedir}/war_template/WEB-INF"/>
+                    </copy>
+                  </tasks>
+                </configuration>
+                <goals>
+                  <goal>run</goal>
+                </goals>
+              </execution>
+              <execution>
+                <id>6</id>
+                <phase>generate-test-sources</phase>
+                <configuration>
+                  <tasks if="pc.test.port">
+                    <replace file="${basedir}/target/war_template/WEB-INF/web.xml" token="localhost:8080" value="localhost:${pc.test.port}" />
+                  </tasks>
+                </configuration>
+                <goals>
+                  <goal>run</goal>
+                </goals>
+              </execution>
+              <execution>
+                <id>7</id>
+                <phase>generate-test-sources</phase>
+                <configuration>
+                  <tasks>
+                    <war destfile="target/hello.war" webxml="target/war_template/WEB-INF/web.xml">
                       <classes dir="target/test-classes">
                         <exclude name="wsrp2/**/*" />
                       </classes>
-                      <zipfileset dir="war_template/WEB-INF" includes="**/*" prefix="WEB-INF" />
-                      <!-- zipfileset dir="war_template/WEB-INF" includes="conf**/*" prefix="WEB-INF/classes" / -->
+                      <zipfileset dir="target/war_template/WEB-INF" includes="**/*" prefix="WEB-INF" />
                     </war>
                   </tasks>
                 </configuration>
@@ -478,7 +504,7 @@
                 </goals>
               </execution>
               <execution>
-                <id>6</id>
+                <id>8</id>
                 <phase>generate-test-sources</phase>
                 <configuration>
                   <tasks>
@@ -525,6 +551,10 @@
             <configuration>
               <systemProperties>
                 <property>
+                  <name>testPort</name>
+                  <value>${pc.test.port}</value>
+                </property>
+                <property>
                   <name>testPath</name>
                   <value>${basedir}</value>
                 </property>
@@ -821,18 +851,43 @@
                   <goal>run</goal>
                 </goals>
               </execution>
-
               <execution>
-                <id>5</id>
+               <id>5</id>
                 <phase>generate-test-sources</phase>
                 <configuration>
                   <tasks>
-                    <war destfile="target/hello.war" webxml="war_template/WEB-INF/web.xml">
+                    <mkdir dir="${basedir}/target/war_template/WEB-INF"/>
+                    <copy todir="${basedir}/target/war_template/WEB-INF">
+                      <fileset dir="${basedir}/war_template/WEB-INF"/>
+                    </copy>
+                  </tasks>
+                </configuration>
+                <goals>
+                  <goal>run</goal>
+                </goals>
+              </execution>
+              <execution>
+                <id>6</id>
+                <phase>generate-test-sources</phase>
+                <configuration>
+                  <tasks if="pc.test.port">
+                    <replace file="${basedir}/target/war_template/WEB-INF/web.xml" token="localhost:8080" value="localhost:${pc.test.port}" />
+                  </tasks>
+                </configuration>
+                <goals>
+                  <goal>run</goal>
+                </goals>
+              </execution>
+              <execution>
+                <id>7</id>
+                <phase>generate-test-sources</phase>
+                <configuration>
+                  <tasks>
+                    <war destfile="target/hello.war" webxml="target/war_template/WEB-INF/web.xml">
                       <classes dir="target/test-classes">
                         <exclude name="wsrp2/**/*" />
                       </classes>
-                      <zipfileset dir="war_template/WEB-INF" includes="**/*" prefix="WEB-INF" />
-                      <!-- zipfileset dir="war_template/WEB-INF" includes="conf**/*" prefix="WEB-INF/classes" / -->
+                      <zipfileset dir="target/war_template/WEB-INF" includes="**/*" prefix="WEB-INF" />
                     </war>
                   </tasks>
                 </configuration>
@@ -856,6 +911,10 @@
             <configuration>
               <systemProperties>
                 <property>
+                  <name>testPort</name>
+                  <value>${pc.test.port}</value>
+                </property>
+                <property>
                   <name>testPath</name>
                   <value>${basedir}</value>
                 </property>
@@ -1023,25 +1082,51 @@
             </goals>
           </execution>
           <execution>
-            <id>5</id>
+           <id>5</id>
             <phase>generate-test-sources</phase>
             <configuration>
               <tasks>
-                <war destfile="target/hello.war" webxml="war_template/WEB-INF/web.xml">
+                <mkdir dir="${basedir}/target/war_template/WEB-INF"/>
+                <copy todir="${basedir}/target/war_template/WEB-INF">
+                  <fileset dir="${basedir}/war_template/WEB-INF"/>
+                </copy>
+              </tasks>
+            </configuration>
+            <goals>
+              <goal>run</goal>
+            </goals>
+          </execution>
+          <execution>
+            <id>6</id>
+            <phase>generate-test-sources</phase>
+            <configuration>
+              <tasks if="pc.test.port">
+                <replace file="${basedir}/target/war_template/WEB-INF/web.xml" token="localhost:8080" value="localhost:${pc.test.port}" />
+              </tasks>
+            </configuration>
+            <goals>
+              <goal>run</goal>
+            </goals>
+          </execution>
+          <execution>
+            <id>7</id>
+            <phase>generate-test-sources</phase>
+            <configuration>
+              <tasks>
+                <war destfile="target/hello.war" webxml="target/war_template/WEB-INF/web.xml">
                   <classes dir="target/test-classes">
                     <exclude name="wsrp2/**/*" />
                   </classes>
-                  <zipfileset dir="war_template/WEB-INF" includes="**/*" prefix="WEB-INF" />
+                  <zipfileset dir="target/war_template/WEB-INF" includes="**/*" prefix="WEB-INF" />
                 </war>
               </tasks>
             </configuration>
-            <!-- zipfileset dir="war_template/WEB-INF" includes="conf**/*" prefix="WEB-INF/classes" / -->
             <goals>
               <goal>run</goal>
             </goals>
           </execution>
           <execution>
-            <id>6</id>
+            <id>8</id>
             <phase>generate-test-sources</phase>
             <configuration>
               <tasks>
@@ -1087,6 +1172,10 @@
         <configuration>
           <systemProperties>
             <property>
+              <name>testPort</name>
+              <value>${pc.test.port}</value>
+            </property>
+            <property>
               <name>testPath</name>
               <value>${basedir}</value>
             </property>
