/*
 * Copyright (C) 2003-2007 eXo Platform SAS.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see<http://www.gnu.org/licenses/>.
 */
package org.exoplatform.services.portletcontainer.imp.Portlet286;

import java.util.Locale;

import javax.portlet.PortletMode;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.logging.Log;
import org.exoplatform.services.log.ExoLogger;
import org.exoplatform.services.portletcontainer.PortletContainerException;
import org.exoplatform.services.portletcontainer.imp.EmptyResponse;
import org.exoplatform.services.portletcontainer.pci.ExoWindowID;
import org.exoplatform.services.portletcontainer.pci.RenderOutput;
import org.exoplatform.services.portletcontainer.pci.ResourceOutput;
import org.exoplatform.test.mocks.servlet.MockHttpSession;
import org.exoplatform.test.mocks.servlet.MockServletRequest;
import org.exoplatform.test.mocks.servlet.MockServletResponse;


/**
 * Created by The eXo Platform SAS
 * Author : Max Shaposhnik
 * Date: 28-Aug-2007
 * Time: 10:51:00
 */

/**
 * PLT 12.1.3
 * The getNamespace method must provide the portlet with a mechanism that ensures the
 * uniqueness of the returned string in the whole portal page.  For example, the
 * getNamespace  method will return a unique string that could be prefixed to a
 * JavaScript variable name within the content generated by the portlet, ensuring its
 * uniqueness in the whole page. The getNamespace method must return the same value for
 * the lifetime of the portlet window.
 */

public class TestNamespacing extends BaseTest2{

  private static Log log = ExoLogger.getLogger("org.exoplatform.services.portletcontainer.imp.Portlet286.TestNamespacing");

  public TestNamespacing(String s) {
    super(s);
  }

  private static String out1;
  private static String out2;
  private static String out3;


   public void testNamespacing() throws PortletContainerException {

    log.info("testNamespacing...");

    HttpServletRequest request = new MockServletRequest(new MockHttpSession(), Locale.US, true);
    HttpServletResponse response = new MockServletResponse(new EmptyResponse());
    ((ExoWindowID)renderInput.getInternalWindowID()).setPortletName("PortletToTestNamespacing");
    RenderOutput o = portletContainer.render(request, response, renderInput);
    //assertTrue(new String(o.getContent()).startsWith("OK"));
    out1 = new String(o.getContent());
    log.info("Done.");
   }


   public void testNamespacing2() throws PortletContainerException {
     log.info("testNamespacing2...");

    HttpServletRequest request = new MockServletRequest(new MockHttpSession(), Locale.US, true);
    HttpServletResponse response = new MockServletResponse(new EmptyResponse());
    ((ExoWindowID)resourceInput.getInternalWindowID()).setPortletName("PortletToTestNamespacing");
    resourceInput.setPortletMode(PortletMode.VIEW);
    ResourceOutput o2 = portletContainer.serveResource(request, response, resourceInput);
    out2 = new String(o2.getContent());
    assertEquals(out1,out2);
    log.info("Done.");
  }


   public void testNamespacing3() throws PortletContainerException {
     log.info("testNamespacing3...");

     HttpServletRequest request = new MockServletRequest(new MockHttpSession(), Locale.US, true);
     HttpServletResponse response = new MockServletResponse(new EmptyResponse());

     ((ExoWindowID)renderInput.getInternalWindowID()).setPortletName("PortletToTestNamespacing2");
     ((ExoWindowID)renderInput.getInternalWindowID()).setUniqueID("123");
     RenderOutput o = portletContainer.render(request, response, renderInput);
     //assertTrue(new String(o.getContent()).startsWith("OK"));
     out3 = new String(o.getContent());
     assertFalse(out2.equals(out3));
     log.info("Done.");
  }


}
