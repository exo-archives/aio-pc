<project>
  <parent>
    <groupId>org.exoplatform.portletcontainer</groupId>
    <artifactId>config</artifactId>
    <version>2.1-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>exo.pc.component.plugins.wsrp1</artifactId>
  <packaging>jar</packaging>
  <name>eXo Portlet Container 2 Plugins WSRP1</name>
  <description>eXo Portlet Container 2 wsrp1 plugin</description>
  
  <repositories>
    <repository>
      <id>Codehaus snapshot repository</id>
      <url>http://snapshots.repository.codehaus.org</url>
    </repository>
  </repositories>

  <dependencies>

    <dependency>
      <groupId>org.exoplatform.kernel</groupId>
      <artifactId>exo.kernel.commons</artifactId>
      <version>${org.exoplatform.kernel.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.kernel</groupId>
      <artifactId>exo.kernel.container</artifactId>
      <version>${org.exoplatform.kernel.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.kernel</groupId>
      <artifactId>exo.kernel.component.common</artifactId>
      <version>${org.exoplatform.kernel.version}</version>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.kernel</groupId>
      <artifactId>exo.kernel.component.cache</artifactId>
      <version>${org.exoplatform.kernel.version}</version>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>exo.core.component.organization.api</artifactId>
      <version>${org.exoplatform.core.version}</version>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>exo.core.component.organization.jdbc</artifactId>
      <version>${org.exoplatform.core.version}</version>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>exo.core.component.database</artifactId>
      <version>${org.exoplatform.core.version}</version>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>exo.core.component.resources.api</artifactId>
      <version>${org.exoplatform.core.version}</version>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>exo.core.component.security.core</artifactId>
      <version>${org.exoplatform.core.version}</version>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.component.core</artifactId>
      <version>${org.exoplatform.pc.version}</version>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.component.plugins.pc</artifactId>
      <version>${org.exoplatform.pc.version}</version>
      <exclusions>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xerces</artifactId>
        </exclusion>
      </exclusions> 
    </dependency>

    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-api-container</artifactId>
      <version>0.9-SNAPSHOT</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xercesImpl</artifactId>
        </exclusion>
      </exclusions>      
    </dependency>

    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-api-generic</artifactId>
      <version>0.9-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-container-tomcat</artifactId>
      <version>0.9-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>

    <!-- ************************ soap ************************ -->

    <dependency>
      <groupId>org.apache.axis2</groupId>
      <artifactId>axis2</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.axis2</groupId>
      <artifactId>axis2-codegen</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.axis2</groupId>
      <artifactId>axis2-kernel</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.axis2.maven2</groupId>
      <artifactId>axis2-wsdl2code-maven-plugin</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.axis2.maven2</groupId>
      <artifactId>axis2-aar-maven-plugin</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ws.commons.neethi</groupId>
      <artifactId>neethi</artifactId>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ws.commons</groupId>
      <artifactId>XmlSchema</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ws.commons.axiom</groupId>
      <artifactId>axiom</artifactId>
      <version>1.2.4</version>
    </dependency>


  </dependencies>

  <profiles>
    <profile>
      <id>wsrp1</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <src.gen.dir>${basedir}/target/generated</src.gen.dir>
      </properties>
    </profile>
  </profiles>

  <properties>
    <war.dir>${basedir}/war_template</war.dir>
  </properties>

  <build>

    <resources>
      <resource>
        <directory>target/generated</directory>
        <includes>
          <include>**/*.wsdd</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.xml</include>
        </includes>
      </resource>
    </resources>

    <plugins>

      <!-- plugin>
        <groupId>org.apache.axis2.maven2</groupId>
        <artifactId>axis2-wsdl2code-maven-plugin</artifactId>
        <configuration>
        <packageName>org.exoplatform.services.wsrp.bind</packageName>
        </configuration>
        <executions>
        <execution>
        <goals>
        <goal>wsdl2code</goal>
        </goals>
        </execution>
        </executions>
        </plugin -->

      <!-- plugin>
        <groupId>org.apache.axis2</groupId>
        <artifactId>axis2-aar-maven-plugin</artifactId>
        <version>1.2</version>
        <extensions>true</extensions>
        <configuration>
        <servicesXmlFile>target/generated/resources/services.xml</servicesXmlFile>
        <wsdlFile>wsdl/wsrp_service.wsdl</wsdlFile>
        <includeDependencies>false</includeDependencies>
        </configuration>
        </plugin -->

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>0</id>
            <phase>generate-sources</phase>
            <configuration>
              <tasks if="exo.proxy.host">
                <echo>=== PROXY === ${exo.proxy.host}:${exo.proxy.port}</echo>
                <mkdir dir="${src.gen.dir}" />
                <java fork="yes" dir="wsdl" classname="org.apache.axis2.wsdl.WSDL2Java">
                  <sysproperty key="proxySet" value="" />
                  <sysproperty key="proxyHost" value="${exo.proxy.host}" />
                  <sysproperty key="proxyPort" value="${exo.proxy.port}" />
                  <arg
                    line="-s -ss -sd -ssi -g -S -R -d none -t -o ${src.gen.dir} -ns2p urn:oasis:names:tc:wsrp:v1:intf=org.exoplatform.services.wsrp.intf,urn:oasis:names:tc:wsrp:v1:types=org.exoplatform.services.wsrp.type,urn:oasis:names:tc:wsrp:v1:bind=org.exoplatform.services.wsrp.bind,urn:oasis:names:tc:wsrp:v1:wsdl=org.exoplatform.services.wsrp.wsdl -p org.exoplatform.services.wsrp.wsdl -uri wsrp_service.wsdl" />
                  <classpath refid="maven.dependency.classpath" />
                </java>
              </tasks>
              <sourceRoot>${src.gen.dir}</sourceRoot>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>1</id>
            <phase>generate-sources</phase>
            <configuration>
              <tasks if="${exo.proxy.host}">
                <echo>=== NON-PROXY ===</echo>
                <mkdir dir="${src.gen.dir}" />
                <java fork="yes" dir="wsdl" classname="org.apache.axis2.wsdl.WSDL2Java">
                  <sysproperty key="proxySet" value="" />
                  <sysproperty key="proxyHost" value="localhost" />
                  <sysproperty key="proxyPort" value="8080" />

                  <arg
                    line="-s -ss -sd -ssi -o ${src.gen.dir} -ns2p urn:oasis:names:tc:wsrp:v1:intf=org.exoplatform.services.wsrp.intf,urn:oasis:names:tc:wsrp:v1:types=org.exoplatform.services.wsrp.type,urn:oasis:names:tc:wsrp:v1:bind=org.exoplatform.services.wsrp.bind,urn:oasis:names:tc:wsrp:v1:wsdl=org.exoplatform.services.wsrp.wsdl -p org.exoplatform.services.wsrp.wsdl -uri wsrp_service.wsdl" />
                  <classpath refid="maven.dependency.classpath" />
                </java>
              </tasks>
              <sourceRoot>${src.gen.dir}</sourceRoot>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>2</id>
            <phase>compile</phase>
            <configuration>
              <tasks>
                <taskdef name="hibernatedoclet" classname="xdoclet.modules.hibernate.HibernateDocletTask"
                  classpathref="maven.compile.classpath" />
                <hibernatedoclet destdir="${basedir}/target/classes" excludedtags="@version,@author,@todo"
                  mergedir="target/classes" force="true" verbose="false">
                  <fileset dir="${basedir}/src/main/java">
                    <include name="org/exoplatform/services/wsrp/consumer/impl/WSRP1ProducerData.java" />
                    <include name="org/exoplatform/services/wsrp/producer/impl/WSRP1StateData.java" />
                    <!--                        <include name="**/*.java" />-->
                  </fileset>
                  <hibernate version="3.0" />
                </hibernatedoclet>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>3</id>
            <phase>generate-test-sources</phase>
            <configuration>
              <tasks>
                <mkdir dir="${basedir}/target/test-classes/" />
                <copy todir="${basedir}/target/test-classes/">
                  <fileset dir="${basedir}/war_template/src">
                    <include name="**/*.properties" />
                    <include name="**/*.xml" />
                  </fileset>
                </copy>
                <javac fork="true" srcdir="${basedir}/war_template/src" destdir="${basedir}/target/test-classes/"
                  debug="${maven.compile.debug}" deprecation="${maven.compile.deprecation}"
                  optimize="${maven.compile.optimize}">
                  <classpath>
                    <path refid="maven.dependency.classpath" />
                    <pathelement path="${maven.build.dest}" />
                  </classpath>
                </javac>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

          <execution>
            <id>4</id>
            <phase>generate-test-sources</phase>
            <configuration>
              <tasks>
                <war destfile="target/hello.war" webxml="war_template/WEB-INF/web.xml">
                  <classes dir="target/test-classes">
                    <exclude name="wsrp/**/*" />
                  </classes>
                  <zipfileset dir="war_template/WEB-INF" includes="**/*" prefix="WEB-INF" />
                  <!-- zipfileset dir="war_template/WEB-INF" includes="conf**/*" prefix="WEB-INF/classes" / -->
                </war>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

          <execution>
            <id>5</id>
            <phase>generate-test-sources</phase>
            <configuration>
              <tasks>
                <jar destfile="${project.build.directory}/test/exo.pc.component.plugins.wsrp1.jar"
                  basedir="target/classes" />
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
<!--        <dependencies>-->
<!--          <dependency>-->
<!--            <groupId>ant</groupId>-->
<!--            <artifactId>ant-nodeps</artifactId>-->
<!--            <version>1.6.5</version>-->
<!--          </dependency>-->
<!--        </dependencies>-->
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
            <useRepositoryLayout>false</useRepositoryLayout>
            <excludeTransitive>false</excludeTransitive>
            <excludeGroupIds>xerces</excludeGroupIds>
            <outputDirectory>${project.build.directory}/test</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemProperties>
            <property>
              <name>testPath</name>
              <value>${basedir}</value>
            </property>
            <property>
              <name>mock.portal.dir</name>
              <value>${war.dir}</value>
            </property>
            <property>
              <name>maven.exoplatform.dir</name>
              <value>${war.dir}</value>
            </property>
            <property>
              <name>exo.test.cargo.skip</name>
              <value>${exo.test.cargo.skip}</value>
            </property>
          </systemProperties>
          <includes>
            <include>**/AllTestsPortlet.java</include>
            <!--            <include>**/SuiteForTestProducer.java</include>-->
            <!--            <include>**/SuiteForTestConsumer.java</include>-->
            <!--            <include>**/TestPerformBlockingInteraction.java</include>-->
            <!-- include>**/Test*.java</include -->
          </includes>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
