<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2003-2010 eXo Platform SAS.

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU Affero General Public License
    as published by the Free Software Foundation; either version 3
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, see <http://www.gnu.org/licenses />.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.exoplatform.portletcontainer</groupId>
    <artifactId>config</artifactId>
    <version>2.0.13-SNAPSHOT</version>
  </parent>
  <artifactId>exo.pc.component.plugins.wsrp1</artifactId>
  <packaging>jar</packaging>
  <name>eXo PC Plugins WSRP1</name>
  <description>eXo PC wsrp1 plugin</description>

  <properties>
    <src.gen.dir>${basedir}/target/generated</src.gen.dir>
    <war.dir>${basedir}/war_template</war.dir>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.exoplatform.kernel</groupId>
      <artifactId>exo.kernel.commons</artifactId>
      <version>${org.exoplatform.kernel.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.kernel</groupId>
      <artifactId>exo.kernel.container</artifactId>
      <version>${org.exoplatform.kernel.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.kernel</groupId>
      <artifactId>exo.kernel.component.common</artifactId>
      <version>${org.exoplatform.kernel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.kernel</groupId>
      <artifactId>exo.kernel.component.cache</artifactId>
      <version>${org.exoplatform.kernel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>exo.core.component.organization.api</artifactId>
      <version>${org.exoplatform.core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>exo.core.component.organization.jdbc</artifactId>
      <version>${org.exoplatform.core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>exo.core.component.database</artifactId>
      <version>${org.exoplatform.core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>exo.core.component.resources.api</artifactId>
      <version>${org.exoplatform.core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>exo.core.component.security.core</artifactId>
      <version>${org.exoplatform.core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.component.core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.component.plugins.pc</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-api-container</artifactId>
      <version>1.0-beta-2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-api-generic</artifactId>
      <version>1.0-beta-2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-container-tomcat</artifactId>
      <version>1.0-beta-2</version>
      <scope>provided</scope>
    </dependency>
    <!-- ************************ soap ************************ -->
    <dependency>
      <groupId>axis</groupId>
      <artifactId>axis</artifactId>
      <version>1.4-0231</version>
    </dependency>
    <dependency>
      <groupId>wsdl4j</groupId>
      <artifactId>wsdl4j</artifactId>
      <version>1.5.1</version>
    </dependency>
    <dependency>
      <groupId>commons-discovery</groupId>
      <artifactId>commons-discovery</artifactId>
      <version>0.2</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.exoplatform.tool</groupId>
      <artifactId>exo.tool.framework.junit</artifactId>
      <version>1.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.3</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
    </dependency>
    <dependency>
      <groupId>xpp3</groupId>
      <artifactId>xpp3</artifactId>
      <version>1.1.3.4.O</version>
    </dependency>
    <dependency>
      <groupId>org.apache.axis</groupId>
      <artifactId>axis-jaxrpc</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate</artifactId>
      <version>3.1.2</version>
    </dependency>
    <dependency>
      <groupId>jtidy</groupId>
      <artifactId>jtidy</artifactId>
      <version>4aug2000r7-dev</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.3</version>
    </dependency>
    <dependency>
      <groupId>javax.portlet</groupId>
      <artifactId>portlet-api</artifactId>
      <version>2.0</version>
    </dependency>
  </dependencies>
  
  <profiles>
    <profile>
      <id>cargo</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <dependencies>

        <dependency>
          <groupId>org.exoplatform.kernel</groupId>
          <artifactId>exo.kernel.commons</artifactId>
          <version>${org.exoplatform.kernel.version}</version>
          <scope>compile</scope>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.kernel</groupId>
          <artifactId>exo.kernel.container</artifactId>
          <version>${org.exoplatform.kernel.version}</version>
          <scope>compile</scope>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.kernel</groupId>
          <artifactId>exo.kernel.component.common</artifactId>
          <version>${org.exoplatform.kernel.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.kernel</groupId>
          <artifactId>exo.kernel.component.cache</artifactId>
          <version>${org.exoplatform.kernel.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.organization.api</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.organization.jdbc</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.database</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.resources.api</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.security.core</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.portletcontainer</groupId>
          <artifactId>exo.pc.component.core</artifactId>
          <version>${project.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.portletcontainer</groupId>
          <artifactId>exo.pc.component.plugins.pc</artifactId>
          <version>${project.version}</version>
        </dependency>

        <dependency>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-core-api-container</artifactId>
          <version>0.9</version>
        </dependency>

        <dependency>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-core-api-generic</artifactId>
          <version>0.9</version>
        </dependency>

        <dependency>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-core-container-tomcat</artifactId>
          <version>0.9</version>
        </dependency>

        <!-- ************************ soap ************************ -->

        <dependency>
          <groupId>axis</groupId>
          <artifactId>axis</artifactId>
          <version>1.4-0231</version>
        </dependency>

        <dependency>
          <groupId>wsdl4j</groupId>
          <artifactId>wsdl4j</artifactId>
          <version>1.5.1</version>
        </dependency>

        <dependency>
          <groupId>commons-discovery</groupId>
          <artifactId>commons-discovery</artifactId>
          <version>0.2</version>
        </dependency>

      </dependencies>
      
      <properties>
        <src.gen.dir>${basedir}/target/generated</src.gen.dir>
        <war.dir>${basedir}/war_template</war.dir>
      </properties>

      <build>

        <resources>
          <resource>
            <directory>target/generated</directory>
            <includes>
              <include>**/*.wsdd</include>
            </includes>
          </resource>
          <resource>
            <directory>src/main/resources</directory>
            <includes>
              <include>**/*.xml</include>
            </includes>
          </resource>
        </resources>

        <plugins>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.3</version>
            <executions>
              <execution>
                <id>0</id>
                <phase>generate-sources</phase>
                <configuration>
                  <tasks if="settings.activeProxy.host">
                    <echo>=== PROXY === [${settings.activeProxy.host}:${settings.activeProxy.port}] ===</echo>

                    <property name="activeProxy.host" value="${settings.activeProxy.host}" />
                    <property name="activeProxy.port" value="${settings.activeProxy.port}" />
                    <property name="activeProxy.user" value="${settings.activeProxy.username}" />
                    <property name="activeProxy.password" value="${settings.activeProxy.password}" />
                    <property name="activeProxy.nonProxyHosts" value="${settings.activeProxy.nonProxyHosts}" />

                    <taskdef name="setproxy" classname="org.apache.tools.ant.taskdefs.optional.net.SetProxy" />
                    <setproxy proxyhost="${settings.activeProxy.host}" proxyport="${settings.activeProxy.port}" proxypassword="${settings.activeProxy.password}" proxyuser="${settings.activeProxy.username}"
                      nonproxyhosts="${settings.activeProxy.nonProxyHosts}" />

                    <mkdir dir="${src.gen.dir}" />
                    <java fork="yes" dir="wsdl" classname="org.apache.axis.wsdl.WSDL2Java">
    <!--                  <sysproperty key="proxySet" value="" />-->
    <!--                  <sysproperty key="proxyHost" value="${exo.proxy.host}" />-->
    <!--                  <sysproperty key="proxyPort" value="${exo.proxy.port}" />-->
                      <arg
                        line="-v -t -O -1 -a --server-side --deployScope 'Application' -W -o ${src.gen.dir} wsrp_service.wsdl" />
                      <classpath refid="maven.dependency.classpath" />
                    </java>
                    <delete
                      file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_ServiceDescription_Binding_SOAPImpl.java" />
                    <delete
                      file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_Registration_Binding_SOAPImpl.java" />
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_Markup_Binding_SOAPImpl.java" />
                    <delete
                      file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_PortletManagement_Binding_SOAPImpl.java" />
                  </tasks>
                  <sourceRoot>${src.gen.dir}</sourceRoot>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>1</id>
                <phase>generate-sources</phase>
                <configuration>
                  <tasks if="${settings.activeProxy.host}">
                    <echo>=== NON-PROXY ===</echo>
                    <mkdir dir="${src.gen.dir}" />
                    <java fork="yes" dir="wsdl" classname="org.apache.axis.wsdl.WSDL2Java">
                      <arg
                        line="-v -t -O -1 -a --server-side --deployScope 'Application' -W -o ${src.gen.dir} wsrp_service.wsdl" />
                      <classpath refid="maven.dependency.classpath" />
                    </java>
                    <delete
                      file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_ServiceDescription_Binding_SOAPImpl.java" />
                    <delete
                      file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_Registration_Binding_SOAPImpl.java" />
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_Markup_Binding_SOAPImpl.java" />
                    <delete
                      file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_PortletManagement_Binding_SOAPImpl.java" />
                  </tasks>
                  <sourceRoot>${src.gen.dir}</sourceRoot>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>2</id>
                <phase>compile</phase>
                <configuration>
                  <tasks>
                    <taskdef name="hibernatedoclet" classname="xdoclet.modules.hibernate.HibernateDocletTask"
                      classpathref="maven.compile.classpath" />
                    <hibernatedoclet destdir="${basedir}/target/classes" excludedtags="@version,@author,@todo"
                      mergedir="target/classes" force="true" verbose="false">
                      <fileset dir="${basedir}/src/main/java">
                        <include name="org/exoplatform/services/wsrp/consumer/impl/WSRP1ProducerData.java" />
                        <include name="org/exoplatform/services/wsrp/producer/impl/WSRP1StateData.java" />
                        <!--                        <include name="**/*.java" />-->
                      </fileset>
                      <hibernate version="3.0" />
                    </hibernatedoclet>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>3</id>
                <phase>generate-test-sources</phase>
                <configuration>
                  <tasks>
                    <mkdir dir="${basedir}/target/test-classes/" />
                    <copy todir="${basedir}/target/test-classes/">
                      <fileset dir="${basedir}/war_template/src">
                        <include name="**/*.properties" />
                        <include name="**/*.xml" />
                      </fileset>
                    </copy>
                    <javac fork="true" srcdir="${basedir}/war_template/src" destdir="${basedir}/target/test-classes/"
                      debug="${maven.compile.debug}" deprecation="${maven.compile.deprecation}"
                      optimize="${maven.compile.optimize}">
                      <classpath>
                        <path refid="maven.dependency.classpath" />
                        <pathelement path="${maven.build.dest}" />
                      </classpath>
                    </javac>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>

              <execution>
                <id>4</id>
                <phase>generate-test-sources</phase>
                <configuration>
                  <tasks>
                    <war destfile="target/hello.war" webxml="war_template/WEB-INF/web.xml">
                      <classes dir="target/test-classes">
                        <exclude name="wsrp/**/*" />
                      </classes>
                      <zipfileset dir="war_template/WEB-INF" includes="**/*" prefix="WEB-INF" />
                      <!-- zipfileset dir="war_template/WEB-INF" includes="conf**/*" prefix="WEB-INF/classes" / -->
                    </war>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>

              <execution>
                <id>5</id>
                <phase>generate-test-sources</phase>
                <configuration>
                  <tasks>
                    <jar destfile="${project.build.directory}/test/exo.pc.component.plugins.wsrp1.jar"
                      basedir="target/classes" />
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>ant</groupId>
                <artifactId>ant-nodeps</artifactId>
                <version>1.6.5</version>
              </dependency>
            </dependencies>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <useRepositoryLayout>false</useRepositoryLayout>
                  <excludeTransitive>false</excludeTransitive>
                  <excludeGroupIds>xerces</excludeGroupIds>
                  <outputDirectory>${project.build.directory}/test</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemProperties>
                <property>
                  <name>testPath</name>
                  <value>${basedir}</value>
                </property>
                <property>
                  <name>mock.portal.dir</name>
                  <value>${war.dir}</value>
                </property>
                <property>
                  <name>maven.exoplatform.dir</name>
                  <value>${war.dir}</value>
                </property>
                <property>
                  <name>exo.test.cargo.skip</name>
                  <value>${exo.test.cargo.skip}</value>
                </property>
              </systemProperties>
              <includes>
                <include>**/AllTestsPortlet.java</include>
                <!--            <include>**/SuiteForTestProducer.java</include>-->
                <!--            <include>**/SuiteForTestConsumer.java</include>-->
                <!--            <include>**/TestPerformBlockingInteraction.java</include>-->
                <!-- include>**/Test*.java</include -->
              </includes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>nocargo</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
          
      <dependencies>

        <dependency>
          <groupId>org.exoplatform.kernel</groupId>
          <artifactId>exo.kernel.commons</artifactId>
          <version>${org.exoplatform.kernel.version}</version>
          <scope>compile</scope>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.kernel</groupId>
          <artifactId>exo.kernel.container</artifactId>
          <version>${org.exoplatform.kernel.version}</version>
          <scope>compile</scope>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.kernel</groupId>
          <artifactId>exo.kernel.component.common</artifactId>
          <version>${org.exoplatform.kernel.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.kernel</groupId>
          <artifactId>exo.kernel.component.cache</artifactId>
          <version>${org.exoplatform.kernel.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.organization.api</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.organization.jdbc</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.database</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.resources.api</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.security.core</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.portletcontainer</groupId>
          <artifactId>exo.pc.component.core</artifactId>
          <version>${project.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.portletcontainer</groupId>
          <artifactId>exo.pc.component.plugins.pc</artifactId>
          <version>${project.version}</version>
        </dependency>

        <dependency>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-core-api-container</artifactId>
          <version>0.9</version>
        </dependency>

        <dependency>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-core-api-generic</artifactId>
          <version>0.9</version>
        </dependency>

        <dependency>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-core-container-tomcat</artifactId>
          <version>0.9</version>
        </dependency>


        <!-- ************************ soap ************************ -->

        <dependency>
          <groupId>axis</groupId>
          <artifactId>axis</artifactId>
          <version>1.4-0231</version>
        </dependency>

        <dependency>
          <groupId>wsdl4j</groupId>
          <artifactId>wsdl4j</artifactId>
          <version>1.5.1</version>
        </dependency>

        <dependency>
          <groupId>commons-discovery</groupId>
          <artifactId>commons-discovery</artifactId>
          <version>0.2</version>
        </dependency>


      </dependencies>

      <properties>
        <src.gen.dir>${basedir}/target/generated</src.gen.dir>
        <war.dir>${basedir}/war_template</war.dir>
      </properties>


      <build>

        <resources>
          <resource>
            <directory>target/generated</directory>
            <includes>
              <include>**/*.wsdd</include>
            </includes>
          </resource>
          <resource>
            <directory>src/main/resources</directory>
            <includes>
              <include>**/*.xml</include>
            </includes>
          </resource>
        </resources>

        <plugins>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.3</version>
            <executions>
              <execution>
                <id>0</id>
                <phase>generate-sources</phase>
                <configuration>
                  <tasks if="settings.activeProxy.host">
                    <echo>=== PROXY === [${settings.activeProxy.host}:${settings.activeProxy.port}] ===</echo>

                    <property name="activeProxy.host" value="${settings.activeProxy.host}" />
                    <property name="activeProxy.port" value="${settings.activeProxy.port}" />
                    <property name="activeProxy.user" value="${settings.activeProxy.username}" />
                    <property name="activeProxy.password" value="${settings.activeProxy.password}" />
                    <property name="activeProxy.nonProxyHosts" value="${settings.activeProxy.nonProxyHosts}" />

                    <taskdef name="setproxy" classname="org.apache.tools.ant.taskdefs.optional.net.SetProxy" />
                    <setproxy proxyhost="${settings.activeProxy.host}" proxyport="${settings.activeProxy.port}" proxypassword="${settings.activeProxy.password}" proxyuser="${settings.activeProxy.username}"
                      nonproxyhosts="${settings.activeProxy.nonProxyHosts}" />

                    <mkdir dir="${src.gen.dir}" />
                    <java fork="yes" dir="wsdl" classname="org.apache.axis.wsdl.WSDL2Java">
    <!--                  <sysproperty key="proxySet" value="" />-->
    <!--                  <sysproperty key="proxyHost" value="${exo.proxy.host}" />-->
    <!--                  <sysproperty key="proxyPort" value="${exo.proxy.port}" />-->
                      <arg line="-v -t -O -1 -a --server-side --deployScope 'Application' -W -o ${src.gen.dir} wsrp_service.wsdl" />
                      <classpath refid="maven.dependency.classpath" />
                    </java>
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_ServiceDescription_Binding_SOAPImpl.java" />
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_Registration_Binding_SOAPImpl.java" />
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_Markup_Binding_SOAPImpl.java" />
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_PortletManagement_Binding_SOAPImpl.java" />
                  </tasks>
                  <sourceRoot>${src.gen.dir}</sourceRoot>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>1</id>
                <phase>generate-sources</phase>
                <configuration>
                  <tasks if="${settings.activeProxy.host}">
                    <echo>=== NON-PROXY ===</echo>
                    <mkdir dir="${src.gen.dir}" />
                    <java fork="yes" dir="wsdl" classname="org.apache.axis.wsdl.WSDL2Java">
                      <arg line="-v -t -O -1 -a --server-side --deployScope 'Application' -W -o ${src.gen.dir} wsrp_service.wsdl" />
                      <classpath refid="maven.dependency.classpath" />
                    </java>
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_ServiceDescription_Binding_SOAPImpl.java" />
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_Registration_Binding_SOAPImpl.java" />
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_Markup_Binding_SOAPImpl.java" />
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_PortletManagement_Binding_SOAPImpl.java" />
                  </tasks>
                  <sourceRoot>${src.gen.dir}</sourceRoot>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>2</id>
                <phase>compile</phase>
                <configuration>
                  <tasks>
                    <taskdef name="hibernatedoclet" classname="xdoclet.modules.hibernate.HibernateDocletTask" classpathref="maven.compile.classpath" />
                    <hibernatedoclet destdir="${basedir}/target/classes" excludedtags="@version,@author,@todo" mergedir="target/classes" force="true"
                      verbose="false">
                      <fileset dir="${basedir}/src/main/java">
                        <include name="org/exoplatform/services/wsrp/consumer/impl/WSRP1ProducerData.java" />
                        <include name="org/exoplatform/services/wsrp/producer/impl/WSRP1StateData.java" />
                      </fileset>
                      <hibernate version="3.0" />
                    </hibernatedoclet>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>3</id>
                <phase>generate-test-sources</phase>
                <configuration>
                  <tasks>
                    <mkdir dir="${basedir}/target/test-classes/" />
                    <copy todir="${basedir}/target/test-classes/">
                      <fileset dir="${basedir}/war_template/src">
                        <include name="**/*.properties" />
                        <include name="**/*.xml" />
                      </fileset>
                    </copy>
                    <javac fork="true" srcdir="${basedir}/war_template/src" destdir="${basedir}/target/test-classes/" debug="${maven.compile.debug}"
                      deprecation="${maven.compile.deprecation}" optimize="${maven.compile.optimize}">
                      <classpath>
                        <path refid="maven.dependency.classpath" />
                        <pathelement path="${maven.build.dest}" />
                      </classpath>
                    </javac>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>

              <execution>
                <id>4</id>
                <phase>generate-test-sources</phase>
                <configuration>
                  <tasks>
                    <war destfile="target/hello.war" webxml="war_template/WEB-INF/web.xml">
                      <classes dir="target/test-classes">
                        <exclude name="wsrp/**/*" />
                      </classes>
                      <zipfileset dir="war_template/WEB-INF" includes="**/*" prefix="WEB-INF" />
                      <!-- zipfileset dir="war_template/WEB-INF" includes="conf**/*" prefix="WEB-INF/classes" / -->
                    </war>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>ant</groupId>
                <artifactId>ant-nodeps</artifactId>
                <version>1.6.5</version>
              </dependency>
            </dependencies>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemProperties>
                <property>
                  <name>testPath</name>
                  <value>${basedir}</value>
                </property>
                <property>
                  <name>mock.portal.dir</name>
                  <value>${war.dir}</value>
                </property>
                <property>
                  <name>maven.exoplatform.dir</name>
                  <value>${war.dir}</value>
                </property>
                <property>
                  <name>exo.test.cargo.skip</name>
                  <value>${exo.test.cargo.skip}</value>
                </property>
              </systemProperties>
              <includes>
                <include>**/AllTestsPortlet.java</include>
                <!--            <include>**/SuiteForTestProducer.java</include>-->
                <!--            <include>**/SuiteForTestConsumer.java</include>-->
                <!--            <include>**/TestPerformBlockingInteraction.java</include>-->
                <!-- include>**/Test*.java</include -->
              </includes>
            </configuration>
          </plugin>

        </plugins>

      </build>
    </profile>
    
    
    <profile>
      <id>axis1</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <repositories>
        <repository>
          <id>maven.org</id>
          <name>maven.org repository</name>
          <url>http://repo1.maven.org/maven2</url>
          <layout>default</layout>
        </repository>
      </repositories>

      <dependencies>

        <dependency>
          <groupId>org.exoplatform.kernel</groupId>
          <artifactId>exo.kernel.commons</artifactId>
          <version>${org.exoplatform.kernel.version}</version>
          <scope>compile</scope>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.kernel</groupId>
          <artifactId>exo.kernel.container</artifactId>
          <version>${org.exoplatform.kernel.version}</version>
          <scope>compile</scope>
        </dependency>
        
        <dependency>
          <groupId>org.exoplatform.kernel</groupId>
          <artifactId>exo.kernel.component.cache</artifactId>
          <version>${org.exoplatform.kernel.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.xml-processing</artifactId>
          <version>${org.exoplatform.core.version}</version>
          <scope>compile</scope>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.organization.api</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

<!--        <dependency>-->
<!--          <groupId>org.exoplatform.core</groupId>-->
<!--          <artifactId>exo.core.component.common</artifactId>-->
<!--          <version>${org.exoplatform.core.version}</version>-->
<!--        </dependency>-->

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.database</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.resources.api</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.organization.jdbc</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

        <dependency>
           <groupId>org.exoplatform.portletcontainer</groupId>
           <artifactId>exo.pc.component.core</artifactId>
           <version>${project.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.portletcontainer</groupId>
          <artifactId>exo.pc.component.plugins.pc</artifactId>
          <version>${project.version}</version>
        </dependency>

        <!-- ************************ soap ************************ -->

        <dependency>
          <groupId>axis</groupId>
          <artifactId>axis</artifactId>
          <version>1.4</version>
          <!-- version>1.2-RC1</version -->
        </dependency>
        
        <dependency>
          <groupId>wsdl4j</groupId>
          <artifactId>wsdl4j</artifactId>
          <version>1.4</version>
        </dependency>
        
        <dependency>
          <groupId>soap</groupId>
          <artifactId>soap</artifactId>
          <version>2.3</version>
        </dependency>
        
        <dependency>
          <groupId>javax.xml</groupId>
          <artifactId>saaj-api</artifactId>
          <version>1.1</version>
        </dependency>
        
        <dependency>
          <groupId>commons-discovery</groupId>
          <artifactId>commons-discovery</artifactId>
          <version>0.2</version>
        </dependency>

        <dependency>
          <groupId>javax.xml</groupId>
          <artifactId>jaxrpc-api</artifactId>
          <version>1.1</version>
        </dependency>

        <dependency>
          <groupId>jtidy</groupId>
          <artifactId>jtidy</artifactId>
          <version>4aug2000r7-dev</version>
        </dependency>
        

      </dependencies>

      <properties>
        <src.gen.dir>${basedir}/target/generated</src.gen.dir>
        <war.dir>${basedir}/war_template</war.dir>
      </properties>

      <build>
      
        <resources>
          <resource>
            <directory>target/generated</directory>
            <includes>
              <include>**/*.wsdd</include>
            </includes>
          </resource>
        </resources>

        <plugins>
        
        
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
				      <execution>
				        <id>0</id>
				        <phase>generate-sources</phase>
				        <configuration>
                  <tasks if="exo.proxy.host">
                    <echo>=== PROXY === ${exo.proxy.host}:${exo.proxy.port}</echo>
				            <mkdir dir="${src.gen.dir}" />
				            <java fork="yes" dir="wsdl" classname="org.apache.axis.wsdl.WSDL2Java">
                      <sysproperty key="proxySet" value="" />
                      <sysproperty key="proxyHost" value="${exo.proxy.host}" />
                      <sysproperty key="proxyPort" value="${exo.proxy.port}" />
                      <arg line="-v -t -O -1 -a --server-side --deployScope 'Application' -W -o ${src.gen.dir} wsrp_service.wsdl" />
				      			  <classpath refid="maven.dependency.classpath" />
				          	</java>
				          	
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_ServiceDescription_Binding_SOAPImpl.java" />
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_Registration_Binding_SOAPImpl.java" />
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_Markup_Binding_SOAPImpl.java" />
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_PortletManagement_Binding_SOAPImpl.java" />
				         	</tasks>
				          <sourceRoot>${src.gen.dir}</sourceRoot>
				        </configuration>
				        <goals>
				          <goal>run</goal>
				        </goals>
				      </execution>
              <execution>
                <id>1</id>
                <phase>generate-sources</phase>
                <configuration>
                  <tasks if="${exo.proxy.host}">
                    <echo>=== NON-PROXY ===</echo>
                    <mkdir dir="${src.gen.dir}" />
                    <java fork="yes" dir="wsdl" classname="org.apache.axis.wsdl.WSDL2Java">
                      <arg line="-v -t -O -1 -a --server-side --deployScope 'Application' -W -o ${src.gen.dir} wsrp_service.wsdl" />
                      <classpath refid="maven.dependency.classpath" />
                    </java>
                    
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_ServiceDescription_Binding_SOAPImpl.java" />
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_Registration_Binding_SOAPImpl.java" />
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_Markup_Binding_SOAPImpl.java" />
                    <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_PortletManagement_Binding_SOAPImpl.java" />
                  </tasks>
                  <sourceRoot>${src.gen.dir}</sourceRoot>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>2</id>
                <phase>compile</phase>
                <configuration>
                  <tasks>
                    <taskdef name="hibernatedoclet"
                      classname="xdoclet.modules.hibernate.HibernateDocletTask"
                      classpathref="maven.compile.classpath"/>
                    <hibernatedoclet destdir="${basedir}/target/classes"
                      excludedtags="@version,@author,@todo" mergedir="target/classes"
                      force="true" verbose="false">
                      <fileset dir="${basedir}/src/main/java">
                        <include name="**/*.java"/>
                      </fileset>
                      <hibernate version="3.0"/>
                    </hibernatedoclet>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>3</id>
                <phase>generate-test-sources</phase>
                <configuration>
                  <tasks>
                    <mkdir dir="${basedir}/target/test-classes/"/>
                    <copy todir="${basedir}/target/test-classes/">
                      <fileset dir="${basedir}/war_template/src">
                        <include name="**/*.properties"/>
                        <include name="**/*.xml"/>
                      </fileset>
                    </copy>
                    <javac fork="true" srcdir="${basedir}/war_template/src" destdir="${basedir}/target/test-classes/"
                               debug="${maven.compile.debug}"
                               deprecation="${maven.compile.deprecation}"
                               optimize="${maven.compile.optimize}">
                      <classpath>
                        <path refid="maven.dependency.classpath"/>
                        <pathelement path="${maven.build.dest}"/>
                      </classpath>
                    </javac>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemProperties>
                <property>
                  <name>testPath</name>
                  <value>${basedir}</value>
                </property>
                <property>
                  <name>mock.portal.dir</name>
                  <value>${war.dir}</value>
                </property>
                <property>
                  <name>maven.exoplatform.dir</name>
                  <value>${war.dir}</value>
                </property>
              </systemProperties>
              <includes>
                <include>**/Test*.java</include>
              </includes>
              <skip>true</skip>
            </configuration>
          </plugin>
          
	        <plugin>
	          <groupId>org.apache.maven.plugins</groupId>
	          <artifactId>maven-compiler-plugin</artifactId>
	          <configuration>
	            <source>1.5</source>
	            <target>1.5</target>
	          </configuration>
	        </plugin>
	        
        </plugins>
        
      </build>
    </profile>
    <profile>
      <id>axis2</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <dependencies>

          <dependency>
            <groupId>org.exoplatform.kernel</groupId>
            <artifactId>exo.kernel.commons</artifactId>
            <version>${org.exoplatform.kernel.version}</version>
            <scope>compile</scope>
          </dependency>

          <dependency>
            <groupId>org.exoplatform.kernel</groupId>
            <artifactId>exo.kernel.container</artifactId>
            <version>${org.exoplatform.kernel.version}</version>
            <scope>compile</scope>
          </dependency>

          <dependency>
            <groupId>org.exoplatform.kernel</groupId>
            <artifactId>exo.kernel.component.cache</artifactId>
            <version>${org.exoplatform.kernel.version}</version>
          </dependency>

          <dependency>
            <groupId>org.exoplatform.core</groupId>
            <artifactId>exo.core.component.xml-processing</artifactId>
            <version>${org.exoplatform.core.version}</version>
            <scope>compile</scope>
          </dependency>

          <dependency>
            <groupId>org.exoplatform.core</groupId>
            <artifactId>exo.core.component.organization.api</artifactId>
            <version>${org.exoplatform.core.version}</version>
          </dependency>

<!--          <dependency>-->
<!--            <groupId>org.exoplatform.core</groupId>-->
<!--            <artifactId>exo.core.component.common</artifactId>-->
<!--            <version>${org.exoplatform.core.versionn}</version>-->
<!--          </dependency>-->

          <dependency>
            <groupId>org.exoplatform.core</groupId>
            <artifactId>exo.core.component.database</artifactId>
            <version>${org.exoplatform.core.version}</version>
          </dependency>

          <dependency>
            <groupId>org.exoplatform.core</groupId>
            <artifactId>exo.core.component.resources.api</artifactId>
            <version>${org.exoplatform.core.version}</version>
          </dependency>

          <dependency>
            <groupId>org.exoplatform.core</groupId>
            <artifactId>exo.core.component.organization.jdbc</artifactId>
            <version>${org.exoplatform.core.version}</version>
          </dependency>

          <dependency>
            <groupId>org.exoplatform.portletcontainer</groupId>
            <artifactId>exo.pc.component.core</artifactId>
            <version>${project.version}</version>
          </dependency>

          <dependency>
            <groupId>org.exoplatform.portletcontainer</groupId>
            <artifactId>exo.pc.component.plugins.pc</artifactId>
            <version>${project.version}</version>
          </dependency>

          <!-- ************************ soap ************************ -->

          <dependency>
            <groupId>org.apache.axis2</groupId>
            <artifactId>axis2</artifactId>
            <version>SNAPSHOT</version>
          </dependency>
          <dependency>
            <groupId>org.apache.axis2</groupId>
            <artifactId>axis2-codegen</artifactId>
            <version>SNAPSHOT</version>
          </dependency>
          <dependency>
            <groupId>org.apache.axis2</groupId>
            <artifactId>axis2-kernel</artifactId>
            <version>SNAPSHOT</version>
          </dependency>
          <dependency>
            <groupId>org.apache.axis2.maven2</groupId>
            <artifactId>axis2-wsdl2code-maven-plugin</artifactId>
            <version>1.1</version>
          </dependency>
          <dependency>
            <groupId>org.apache.axis2.maven2</groupId>
            <artifactId>axis2-aar-maven-plugin</artifactId>
            <version>1.1</version>
          </dependency>
          <dependency>
            <groupId>org.apache.ws.commons.neethi</groupId>
            <artifactId>neethi</artifactId>
            <version>2.0</version>
          </dependency>
          <dependency>
            <groupId>org.apache.ws.commons</groupId>
            <artifactId>XmlSchema</artifactId>
            <version>1.1</version>
          </dependency>
          <dependency>
            <groupId>org.apache.ws.commons.axiom</groupId>
            <artifactId>axiom</artifactId>
            <version>1.2.4</version>
          </dependency>


        </dependencies>

        <properties>
          <war.dir>${basedir}/war_template</war.dir>
          <src.gen.dir>${basedir}/target/generated</src.gen.dir>
        </properties>


        <build>

          <resources>
            <resource>
              <directory>target/generated</directory>
              <includes>
                <include>**/*.wsdd</include>
              </includes>
            </resource>
          </resources>

          <plugins>

            <!-- plugin>
              <groupId>org.apache.axis2.maven2</groupId>
              <artifactId>axis2-wsdl2code-maven-plugin</artifactId>
              <configuration>
              <packageName>org.exoplatform.services.wsrp.bind</packageName>
              </configuration>
              <executions>
              <execution>
              <goals>
              <goal>wsdl2code</goal>
              </goals>
              </execution>
              </executions>
              </plugin -->

            <!-- plugin>
              <groupId>org.apache.axis2</groupId>
              <artifactId>axis2-aar-maven-plugin</artifactId>
              <version>1.2</version>
              <extensions>true</extensions>
              <configuration>
              <servicesXmlFile>target/generated/resources/services.xml</servicesXmlFile>
              <wsdlFile>wsdl/wsrp_service.wsdl</wsdlFile>
              <includeDependencies>false</includeDependencies>
              </configuration>
              </plugin -->

            <plugin>
              <artifactId>maven-antrun-plugin</artifactId>
              <executions>
                <execution>
                  <id>0</id>
                  <phase>generate-sources</phase>
                  <configuration>
                    <tasks if="exo.proxy.host">
                      <echo>=== PROXY === ${exo.proxy.host}:${exo.proxy.port}</echo>
                      <mkdir dir="${src.gen.dir}" />
                      <java fork="yes" dir="wsdl" classname="org.apache.axis2.wsdl.WSDL2Java">
                        <sysproperty key="proxySet" value="" />
                        <sysproperty key="proxyHost" value="${exo.proxy.host}" />
                        <sysproperty key="proxyPort" value="${exo.proxy.port}" />
                        <arg
                          line="-s -ss -sd -ssi -g -S -R -d none -t -o ${src.gen.dir} -ns2p urn:oasis:names:tc:wsrp:v1:intf=org.exoplatform.services.wsrp.intf,urn:oasis:names:tc:wsrp:v1:types=org.exoplatform.services.wsrp.type,urn:oasis:names:tc:wsrp:v1:bind=org.exoplatform.services.wsrp.bind,urn:oasis:names:tc:wsrp:v1:wsdl=org.exoplatform.services.wsrp.wsdl -p org.exoplatform.services.wsrp.wsdl -uri wsrp_service.wsdl" />
                        <classpath refid="maven.dependency.classpath" />
                      </java>
                    </tasks>
                    <sourceRoot>${src.gen.dir}</sourceRoot>
                  </configuration>
                  <goals>
                    <goal>run</goal>
                  </goals>
                </execution>
                <execution>
                  <id>1</id>
                  <phase>generate-sources</phase>
                  <configuration>
                    <tasks if="${exo.proxy.host}">
                      <echo>=== NON-PROXY ===</echo>
                      <mkdir dir="${src.gen.dir}" />
                      <java fork="yes" dir="wsdl" classname="org.apache.axis2.wsdl.WSDL2Java">
                        <arg
                          line="-s -ss -sd -ssi -g -S -R -d none -t -o ${src.gen.dir} -ns2p urn:oasis:names:tc:wsrp:v1:intf=org.exoplatform.services.wsrp.intf,urn:oasis:names:tc:wsrp:v1:types=org.exoplatform.services.wsrp.type,urn:oasis:names:tc:wsrp:v1:bind=org.exoplatform.services.wsrp.bind,urn:oasis:names:tc:wsrp:v1:wsdl=org.exoplatform.services.wsrp.wsdl -p org.exoplatform.services.wsrp.wsdl -uri wsrp_service.wsdl" />
                        <classpath refid="maven.dependency.classpath" />
                      </java>
                    </tasks>
                    <sourceRoot>${src.gen.dir}</sourceRoot>
                  </configuration>
                  <goals>
                    <goal>run</goal>
                  </goals>
                </execution>
                <execution>
                  <id>2</id>
                  <phase>compile</phase>
                  <configuration>
                    <tasks>
                      <taskdef name="hibernatedoclet" classname="xdoclet.modules.hibernate.HibernateDocletTask" classpathref="maven.compile.classpath" />
                      <hibernatedoclet destdir="${basedir}/target/classes" excludedtags="@version,@author,@todo" mergedir="target/classes" force="true"
                        verbose="false">
                        <fileset dir="${basedir}/src/main/java">
                          <include name="**/*.java" />
                        </fileset>
                        <hibernate version="3.0" />
                      </hibernatedoclet>
                    </tasks>
                  </configuration>
                  <goals>
                    <goal>run</goal>
                  </goals>
                </execution>
                <execution>
                  <id>3</id>
                  <phase>generate-test-sources</phase>
                  <configuration>
                    <tasks>
                      <mkdir dir="${basedir}/target/test-classes/" />
                      <copy todir="${basedir}/target/test-classes/">
                        <fileset dir="${basedir}/war_template/src">
                          <include name="**/*.properties" />
                          <include name="**/*.xml" />
                        </fileset>
                      </copy>
                      <javac fork="true" srcdir="${basedir}/war_template/src" destdir="${basedir}/target/test-classes/" debug="${maven.compile.debug}"
                        deprecation="${maven.compile.deprecation}" optimize="${maven.compile.optimize}">
                        <classpath>
                          <path refid="maven.dependency.classpath" />
                          <pathelement path="${maven.build.dest}" />
                        </classpath>
                      </javac>
                    </tasks>
                  </configuration>
                  <goals>
                    <goal>run</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>

            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <configuration>
                <systemProperties>
                  <property>
                    <name>testPath</name>
                    <value>${basedir}</value>
                  </property>
                  <property>
                    <name>mock.portal.dir</name>
                    <value>${war.dir}</value>
                  </property>
                  <property>
                    <name>maven.exoplatform.dir</name>
                    <value>${war.dir}</value>
                  </property>
                </systemProperties>
                <includes>
                  <include>**/Test*.java</include>
                </includes>
                <skip>true</skip>
              </configuration>
            </plugin>

            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <configuration>
                <source>1.5</source>
                <target>1.5</target>
              </configuration>
            </plugin>

          </plugins>

        </build>
    </profile>

    <profile>
      <id>cxf</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <repositories>
        <repository>
          <id>apache-snapshots</id>
          <name>Apache SNAPSHOT Repository</name>
          <url>http://people.apache.org/repo/m2-snapshot-repository/</url>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
        <repository>
          <id>apache-incubating</id>
          <name>Apache Incubating Repository</name>
          <url>http://people.apache.org/repo/m2-incubating-repository/</url>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <id>apache-plugin-snapshots</id>
          <name>Apache Maven Plugin Snapshots</name>
          <url>http://people.apache.org/repo/m2-snapshot-repository</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </pluginRepository>
      </pluginRepositories>

      <dependencies>

        <dependency>
          <groupId>org.exoplatform.kernel</groupId>
          <artifactId>exo.kernel.commons</artifactId>
          <version>${org.exoplatform.kernel.version}</version>
          <scope>compile</scope>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.kernel</groupId>
          <artifactId>exo.kernel.container</artifactId>
          <version>${org.exoplatform.kernel.version}</version>
          <scope>compile</scope>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.kernel</groupId>
          <artifactId>exo.kernel.component.cache</artifactId>
          <version>${org.exoplatform.kernel.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.xml-processing</artifactId>
          <version>${org.exoplatform.core.version}</version>
          <scope>compile</scope>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.organization.api</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

<!--        <dependency>-->
<!--          <groupId>org.exoplatform.core</groupId>-->
<!--          <artifactId>exo.core.component.common</artifactId>-->
<!--          <version>${org.exoplatform.core.version}</version>-->
<!--        </dependency>-->

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.database</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.resources.api</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.core</groupId>
          <artifactId>exo.core.component.organization.jdbc</artifactId>
          <version>${org.exoplatform.core.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.portletcontainer</groupId>
          <artifactId>exo.pc.component.core</artifactId>
          <version>${project.version}</version>
        </dependency>

        <dependency>
          <groupId>org.exoplatform.portletcontainer</groupId>
          <artifactId>exo.pc.component.plugins.pc</artifactId>
          <version>${project.version}</version>
        </dependency>

        <!-- ************************ soap ************************ -->

        <dependency>
          <groupId>org.apache.cxf</groupId>
          <artifactId>cxf-rt-frontend-jaxws</artifactId>
          <version>2.3.1</version>
        </dependency>
        <dependency>
          <groupId>org.apache.cxf</groupId>
          <artifactId>cxf-rt-transports-http</artifactId>
          <version>2.3.1</version>
        </dependency>
        <dependency>
          <groupId>org.apache.cxf</groupId>
          <artifactId>cxf-rt-transports-http-jetty</artifactId>
          <version>2.3.1</version>
        </dependency>


      </dependencies>


      <properties>
        <src.gen.dir>${basedir}/target/generated</src.gen.dir>
        <war.dir>${basedir}/war_template</war.dir>
      </properties>


      <build>

        <resources>
          <resource>
            <directory>target/generated</directory>
            <includes>
              <include>**/*.wsdd</include>
            </includes>
          </resource>
        </resources>

        <plugins>


          <plugin>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-codegen-plugin</artifactId>
            <version>2.3.1</version>
            <executions>
              <execution>
                <id>generate-sources</id>
                <phase>generate-sources</phase>
                <configuration>
                  <sourceRoot>${src.gen.dir}</sourceRoot>
                  <wsdlOptions>
                    <wsdlOption>
                      <wsdl>${basedir}/wsdl/wsrp_service.wsdl</wsdl>
                      <extraargs>
                        <extraarg>-all</extraarg>
                        <extraarg>-p</extraarg>
                        <extraarg>urn:oasis:names:tc:wsrp:v1:types=org.exoplatform.services.wsrp.type</extraarg>
                        <extraarg>-p</extraarg>
                        <extraarg>urn:oasis:names:tc:wsrp:v1:intf=org.exoplatform.services.wsrp.intf</extraarg>
                        <extraarg>-p</extraarg>
                        <extraarg>urn:oasis:names:tc:wsrp:v1:bind=org.exoplatform.services.wsrp.bind</extraarg>
                        <extraarg>-p</extraarg>
                        <extraarg>urn:oasis:names:tc:wsrp:v1:wsdl=org.exoplatform.services.wsrp.wsdl</extraarg>
                      </extraargs>
                    </wsdlOption>
                  </wsdlOptions>
                </configuration>
                <goals>
                  <goal>wsdl2java</goal>
                </goals>
              </execution>
            </executions>
          </plugin>


          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>1</id>
                <phase>compile</phase>
                <configuration>
                  <tasks>
                    <taskdef name="hibernatedoclet" classname="xdoclet.modules.hibernate.HibernateDocletTask" classpathref="maven.compile.classpath" />
                    <hibernatedoclet destdir="${basedir}/target/classes" excludedtags="@version,@author,@todo" mergedir="target/classes" force="true"
                      verbose="false">
                      <fileset dir="${basedir}/src/main/java">
                        <include name="**/*.java" />
                      </fileset>
                      <hibernate version="3.0" />
                    </hibernatedoclet>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>2</id>
                <phase>generate-test-sources</phase>
                <configuration>
                  <tasks>
                    <mkdir dir="${basedir}/target/test-classes/" />
                    <copy todir="${basedir}/target/test-classes/">
                      <fileset dir="${basedir}/war_template/src">
                        <include name="**/*.properties" />
                        <include name="**/*.xml" />
                      </fileset>
                    </copy>
                    <javac fork="true" srcdir="${basedir}/war_template/src" destdir="${basedir}/target/test-classes/" debug="${maven.compile.debug}"
                      deprecation="${maven.compile.deprecation}" optimize="${maven.compile.optimize}">
                      <classpath>
                        <path refid="maven.dependency.classpath" />
                        <pathelement path="${maven.build.dest}" />
                      </classpath>
                    </javac>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemProperties>
                <property>
                  <name>testPath</name>
                  <value>${basedir}</value>
                </property>
                <property>
                  <name>mock.portal.dir</name>
                  <value>${war.dir}</value>
                </property>
                <property>
                  <name>maven.exoplatform.dir</name>
                  <value>${war.dir}</value>
                </property>
              </systemProperties>
              <includes>
                <include>**/Test*.java</include>
              </includes>
              <skip>true</skip>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <source>1.5</source>
              <target>1.5</target>
            </configuration>
          </plugin>

        </plugins>

      </build>
  
    </profile>

    <profile>
      <id>xfire-jaxb</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      
       <repositories>
    <repository>
      <id>codehaus</id>
      <name>Codehaus maven repository</name>
      <url>http://dist.codehaus.org/</url>
      <layout>legacy</layout>
    </repository>
    <repository>
      <id>apache-snapshots</id>
      <name>Snapshot repository</name>
      <url>http://people.apache.org/maven-snapshot-repository/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>snapshot</id>
      <name>Snapshot repository</name>
      <url>http://snapshots.maven.codehaus.org/maven2/</url>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>

    <dependency>
      <groupId>org.exoplatform.kernel</groupId>
      <artifactId>exo.kernel.commons</artifactId>
      <version>${org.exoplatform.kernel.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.kernel</groupId>
      <artifactId>exo.kernel.container</artifactId>
      <version>${org.exoplatform.kernel.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.kernel</groupId>
      <artifactId>exo.kernel.component.cache</artifactId>
      <version>${org.exoplatform.kernel.version}</version>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>exo.core.component.xml-processing</artifactId>
      <version>${org.exoplatform.core.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>exo.core.component.organization.api</artifactId>
      <version>${org.exoplatform.core.version}</version>
    </dependency>

<!--    <dependency>-->
<!--      <groupId>org.exoplatform.core</groupId>-->
<!--      <artifactId>exo.core.component.common</artifactId>-->
<!--      <version>${org.exoplatform.core.version}</version>-->
<!--    </dependency>-->

    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>exo.core.component.database</artifactId>
      <version>${org.exoplatform.core.version}</version>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>exo.core.component.resources.api</artifactId>
      <version>${org.exoplatform.core.version}</version>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.core</groupId>
      <artifactId>exo.core.component.organization.jdbc</artifactId>
      <version>${org.exoplatform.core.version}</version>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.component.core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.exoplatform.portletcontainer</groupId>
      <artifactId>exo.pc.component.plugins.pc</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- ************************ soap ************************ -->

    <dependency>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>xfire-maven-plugin</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>wsdl4j</groupId>
      <artifactId>wsdl4j</artifactId>
      <version>1.4</version>
    </dependency>

    <dependency>
      <groupId>soap</groupId>
      <artifactId>soap</artifactId>
      <version>2.3</version>
    </dependency>

    <dependency>
      <groupId>javax.xml</groupId>
      <artifactId>saaj-api</artifactId>
      <version>1.1</version>
    </dependency>

    <dependency>
      <groupId>commons-discovery</groupId>
      <artifactId>commons-discovery</artifactId>
      <version>0.2</version>
    </dependency>

    <dependency>
      <groupId>javax.xml</groupId>
      <artifactId>jaxrpc-api</artifactId>
      <version>1.1</version>
    </dependency>

    <dependency>
      <groupId>jtidy</groupId>
      <artifactId>jtidy</artifactId>
      <version>4aug2000r7-dev</version>
    </dependency>


  </dependencies>



  <properties>
    <src.gen.dir>${basedir}/target/generated</src.gen.dir>
    <war.dir>${basedir}/war_template</war.dir>
  </properties>


  <build>

    <resources>
      <resource>
        <directory>target/generated</directory>
        <includes>
          <include>**/*.wsdd</include>
        </includes>
      </resource>
    </resources>

    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xfire-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>wsgen</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <package>org.exoplatform.services.wsrp.wsdl</package>
          <profile>org.codehaus.xfire.gen.jsr181.Jsr181Profile</profile>
          <binding>jaxb</binding>
          <!-- externalBindings>${basedir}/wsdl/wsrp-bindings.xjb</externalBindings -->
          <outputDirectory>${src.gen.dir}</outputDirectory>
          <wsdls>
            <wsdl>${basedir}/wsdl/wsrp_service.wsdl</wsdl>
          </wsdls>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>0</id>
            <phase>compile</phase>
            <configuration>
              <tasks>
                <taskdef name="hibernatedoclet" classname="xdoclet.modules.hibernate.HibernateDocletTask" classpathref="maven.compile.classpath" />
                <hibernatedoclet destdir="${basedir}/target/classes" excludedtags="@version,@author,@todo" mergedir="target/classes" force="true"
                  verbose="false">
                  <fileset dir="${basedir}/src/main/java">
                    <include name="**/*.java" />
                  </fileset>
                  <hibernate version="3.0" />
                </hibernatedoclet>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>1</id>
            <phase>generate-test-sources</phase>
            <configuration>
              <tasks>
                <mkdir dir="${basedir}/target/test-classes/" />
                <copy todir="${basedir}/target/test-classes/">
                  <fileset dir="${basedir}/war_template/src">
                    <include name="**/*.properties" />
                    <include name="**/*.xml" />
                  </fileset>
                </copy>
                <javac fork="true" srcdir="${basedir}/war_template/src" destdir="${basedir}/target/test-classes/" debug="${maven.compile.debug}"
                  deprecation="${maven.compile.deprecation}" optimize="${maven.compile.optimize}">
                  <classpath>
                    <path refid="maven.dependency.classpath" />
                    <pathelement path="${maven.build.dest}" />
                  </classpath>
                </javac>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemProperties>
            <property>
              <name>testPath</name>
              <value>${basedir}</value>
            </property>
            <property>
              <name>mock.portal.dir</name>
              <value>${war.dir}</value>
            </property>
            <property>
              <name>maven.exoplatform.dir</name>
              <value>${war.dir}</value>
            </property>
          </systemProperties>
          <includes>
            <include>**/Test*.java</include>
          </includes>
          <skip>true</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>

    </plugins>

  </build>
    </profile>

    <profile>
      <id>xfire-xmlbeans</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
    
    <repositories>
      <repository>
        <id>codehaus</id>
        <name>Codehaus maven repository</name>
        <url>http://dist.codehaus.org/</url>
        <layout>legacy</layout>
      </repository>
      <repository>
        <id>apache-snapshots</id>
        <name>Snapshot repository</name>
        <url>http://people.apache.org/maven-snapshot-repository/</url>
      </repository>
    </repositories>
    <pluginRepositories>
      <pluginRepository>
        <id>snapshot</id>
        <name>Snapshot repository</name>
        <url>http://snapshots.maven.codehaus.org/maven2/</url>
      </pluginRepository>
    </pluginRepositories>

    <dependencies>

      <dependency>
        <groupId>org.exoplatform.kernel</groupId>
        <artifactId>exo.kernel.commons</artifactId>
        <version>${org.exoplatform.kernel.version}</version>
        <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>org.exoplatform.kernel</groupId>
        <artifactId>exo.kernel.container</artifactId>
        <version>${org.exoplatform.kernel.version}</version>
        <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>org.exoplatform.kernel</groupId>
        <artifactId>exo.kernel.component.cache</artifactId>
        <version>${org.exoplatform.kernel.version}</version>
      </dependency>

      <dependency>
        <groupId>org.exoplatform.core</groupId>
        <artifactId>exo.core.component.xml-processing</artifactId>
        <version>${org.exoplatform.core.version}</version>
        <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>org.exoplatform.core</groupId>
        <artifactId>exo.core.component.organization.api</artifactId>
        <version>${org.exoplatform.core.version}</version>
      </dependency>

<!--      <dependency>-->
<!--        <groupId>org.exoplatform.core</groupId>-->
<!--        <artifactId>exo.core.component.common</artifactId>-->
<!--        <version>${org.exoplatform.core.version}</version>-->
<!--      </dependency>-->

      <dependency>
        <groupId>org.exoplatform.core</groupId>
        <artifactId>exo.core.component.database</artifactId>
        <version>${org.exoplatform.core.version}</version>
      </dependency>

      <dependency>
        <groupId>org.exoplatform.core</groupId>
        <artifactId>exo.core.component.resources.api</artifactId>
        <version>${org.exoplatform.core.version}</version>
      </dependency>

      <dependency>
        <groupId>org.exoplatform.core</groupId>
        <artifactId>exo.core.component.organization.jdbc</artifactId>
        <version>${org.exoplatform.core.version}</version>
      </dependency>

      <dependency>
        <groupId>org.exoplatform.portletcontainer</groupId>
        <artifactId>exo.pc.component.core</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.exoplatform.portletcontainer</groupId>
        <artifactId>exo.pc.component.plugins.pc</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- ************************ soap ************************ -->

      <dependency>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xfire-maven-plugin</artifactId>
        <version>1.0-SNAPSHOT</version>
      </dependency>

      <dependency>
        <groupId>wsdl4j</groupId>
        <artifactId>wsdl4j</artifactId>
        <version>1.4</version>
      </dependency>

      <dependency>
        <groupId>soap</groupId>
        <artifactId>soap</artifactId>
        <version>2.3</version>
      </dependency>

      <dependency>
        <groupId>javax.xml</groupId>
        <artifactId>saaj-api</artifactId>
        <version>1.1</version>
      </dependency>

      <dependency>
        <groupId>commons-discovery</groupId>
        <artifactId>commons-discovery</artifactId>
        <version>0.2</version>
      </dependency>

      <dependency>
        <groupId>javax.xml</groupId>
        <artifactId>jaxrpc-api</artifactId>
        <version>1.1</version>
      </dependency>

      <dependency>
        <groupId>jtidy</groupId>
        <artifactId>jtidy</artifactId>
        <version>4aug2000r7-dev</version>
      </dependency>


    </dependencies>

    <properties>
      <src.gen.dir>${basedir}/target/generated</src.gen.dir>
      <war.dir>${basedir}/war_template</war.dir>
    </properties>


    <build>

      <resources>
        <resource>
          <directory>target/generated</directory>
          <includes>
            <include>**/*.wsdd</include>
          </includes>
        </resource>
      </resources>

      <plugins>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>xmlbeans-maven-plugin</artifactId>
          <version>2.0</version>
          <executions>
            <execution>
              <phase>generate-sources</phase>
              <goals>
                <goal>xmlbeans</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <verbose>true</verbose>
            <schemaDirectory>wsdl</schemaDirectory>
            <sourceGenerationDirectory>${src.gen.dir}</sourceGenerationDirectory>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>stax</groupId>
              <artifactId>stax</artifactId>
              <version>1.1.2-dev</version>
              <exclusions>
                <exclusion>
                  <groupId>xmlbeans</groupId>
                  <artifactId>xmlbeans-jsr173-api</artifactId>
                </exclusion>
              </exclusions>
            </dependency>
          </dependencies>
        </plugin>

        <!-- plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>xfire-maven-plugin</artifactId>
          <executions>
          <execution>
          <goals>
          <goal>wsgen</goal>
          </goals>
          </execution>
          </executions>
          <configuration>
          <package>org.exoplatform.services.wsrp.wsdl</package>
          <profile>org.codehaus.xfire.gen.jsr181.Jsr181Profile</profile>
          <binding>xmlbeans</binding>
          <externalBindings>${basedir}/wsdl/wsrp-bindings.xjb</externalBindings>
          <outputDirectory>${src.gen.dir}</outputDirectory>
          <wsdls>
          <wsdl>${basedir}/wsdl/wsrp_service.wsdl</wsdl>
          </wsdls>
          </configuration>
          </plugin -->

        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <executions>

            <execution>
              <id>0</id>
              <phase>generate-sources</phase>
              <configuration>
                <java classpathref="maven.compile.classpath" dir="${basedir}">
                  <arg line="${basedir}/src/main/binding.xml" />
                </java>
                <tasks>
                  <taskdef name="wsgen" classname="org.codehaus.xfire.gen.WsGenTask" classpathref="maven.compile.classpath" />
                  <wsgen outputDirectory="${src.gen.dir}" wsdl="${basedir}/wsdl/wsrp_service.wsdl" package="org.exoplatform.services.wsrp.wsdl"
                    overwrite="true" />
                </tasks>
                <sourceRoot>${src.gen.dir}</sourceRoot>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>

            <execution>
              <id>1</id>
              <phase>compile</phase>
              <configuration>
                <tasks>
                  <taskdef name="hibernatedoclet" classname="xdoclet.modules.hibernate.HibernateDocletTask" classpathref="maven.compile.classpath" />
                  <hibernatedoclet destdir="${basedir}/target/classes" excludedtags="@version,@author,@todo" mergedir="target/classes" force="true"
                    verbose="false">
                    <fileset dir="${basedir}/src/main/java">
                      <include name="**/*.java" />
                    </fileset>
                    <hibernate version="3.0" />
                  </hibernatedoclet>
                </tasks>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
            <execution>
              <id>2</id>
              <phase>generate-test-sources</phase>
              <configuration>
                <tasks>
                  <mkdir dir="${basedir}/target/test-classes/" />
                  <copy todir="${basedir}/target/test-classes/">
                    <fileset dir="${basedir}/war_template/src">
                      <include name="**/*.properties" />
                      <include name="**/*.xml" />
                    </fileset>
                  </copy>
                  <javac fork="true" srcdir="${basedir}/war_template/src" destdir="${basedir}/target/test-classes/" debug="${maven.compile.debug}"
                    deprecation="${maven.compile.deprecation}" optimize="${maven.compile.optimize}">
                    <classpath>
                      <path refid="maven.dependency.classpath" />
                      <pathelement path="${maven.build.dest}" />
                    </classpath>
                  </javac>
                </tasks>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <systemProperties>
              <property>
                <name>testPath</name>
                <value>${basedir}</value>
              </property>
              <property>
                <name>mock.portal.dir</name>
                <value>${war.dir}</value>
              </property>
              <property>
                <name>maven.exoplatform.dir</name>
                <value>${war.dir}</value>
              </property>
            </systemProperties>
            <includes>
              <include>**/Test*.java</include>
            </includes>
            <skip>true</skip>
          </configuration>
        </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <source>1.5</source>
              <target>1.5</target>
            </configuration>
          </plugin>

        </plugins>

      </build>
    </profile>
  </profiles>
  
  
  
  <build>
    <resources>
      <resource>
        <directory>target/generated</directory>
        <includes>
          <include>**/*.wsdd</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.xml</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>0</id>
            <phase>generate-sources</phase>
            <configuration>
              <tasks if="settings.activeProxy.host">
                <echo>=== PROXY === [${settings.activeProxy.host}:${settings.activeProxy.port}] ===</echo>
                <!--                <property name="activeProxy.host" value="${settings.activeProxy.host}" />-->
                <!--                <property name="activeProxy.port" value="${settings.activeProxy.port}" />-->
                <!--                <property name="activeProxy.user" value="${settings.activeProxy.username}" />-->
                <!--                <property name="activeProxy.password" value="${settings.activeProxy.password}" />-->
                <!--                <property name="activeProxy.nonProxyHosts" value="${settings.activeProxy.nonProxyHosts}" />-->
                <!--                <taskdef name="setproxy" classname="org.apache.tools.ant.taskdefs.optional.net.SetProxy" />-->
                <!--                <setproxy proxyhost="${settings.activeProxy.host}" proxyport="${settings.activeProxy.port}" proxypassword="${settings.activeProxy.password}" proxyuser="${settings.activeProxy.username}"-->
                <!--                  nonproxyhosts="${settings.activeProxy.nonProxyHosts}" />-->
                <mkdir dir="${src.gen.dir}" />
                <java fork="yes" dir="wsdl" classname="org.apache.axis.wsdl.WSDL2Java">
                  <sysproperty key="proxySet" value="" />
                  <sysproperty key="proxyHost" value="${settings.activeProxy.host}" />
                  <sysproperty key="proxyPort" value="${settings.activeProxy.port}" />
                  <arg line="-v -t -O -1 -a --server-side --deployScope 'Application' -W -o ${src.gen.dir} wsrp_service.wsdl" />
                  <classpath refid="maven.dependency.classpath" />
                </java>
                <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_ServiceDescription_Binding_SOAPImpl.java" />
                <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_Registration_Binding_SOAPImpl.java" />
                <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_Markup_Binding_SOAPImpl.java" />
                <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_PortletManagement_Binding_SOAPImpl.java" />
              </tasks>
              <sourceRoot>${src.gen.dir}</sourceRoot>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>1</id>
            <phase>generate-sources</phase>
            <configuration>
              <tasks if="${settings.activeProxy.host}">
                <echo>=== NON-PROXY ===</echo>
                <mkdir dir="${src.gen.dir}" />
                <java fork="yes" dir="wsdl" classname="org.apache.axis.wsdl.WSDL2Java">
                  <arg line="-v -t -O -1 -a --server-side --deployScope 'Application' -W -o ${src.gen.dir} wsrp_service.wsdl" />
                  <classpath refid="maven.dependency.classpath" />
                </java>
                <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_ServiceDescription_Binding_SOAPImpl.java" />
                <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_Registration_Binding_SOAPImpl.java" />
                <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_Markup_Binding_SOAPImpl.java" />
                <delete file="${src.gen.dir}/org/exoplatform/services/wsrp/bind/WSRP_v1_PortletManagement_Binding_SOAPImpl.java" />
              </tasks>
              <sourceRoot>${src.gen.dir}</sourceRoot>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>2</id>
            <phase>compile</phase>
            <configuration>
              <tasks>
                <taskdef name="hibernatedoclet" classname="xdoclet.modules.hibernate.HibernateDocletTask" classpathref="maven.compile.classpath" />
                <hibernatedoclet destdir="${basedir}/target/classes" excludedtags="@version,@author,@todo" mergedir="target/classes" force="true" verbose="false">
                  <fileset dir="${basedir}/src/main/java">
                    <include name="org/exoplatform/services/wsrp/consumer/impl/WSRP1ProducerData.java" />
                    <include name="org/exoplatform/services/wsrp/producer/impl/WSRP1StateData.java" />
                  </fileset>
                  <!--                        <include name="**/*.java" />-->
                  <hibernate version="3.0" />
                </hibernatedoclet>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>3</id>
            <phase>generate-test-sources</phase>
            <configuration>
              <tasks>
                <mkdir dir="${basedir}/target/test-classes/" />
                <copy todir="${basedir}/target/test-classes/">
                  <fileset dir="${basedir}/war_template/src">
                    <include name="**/*.properties" />
                    <include name="**/*.xml" />
                  </fileset>
                </copy>
                <javac fork="true" srcdir="${basedir}/war_template/src" destdir="${basedir}/target/test-classes/" debug="${maven.compile.debug}" deprecation="${maven.compile.deprecation}" optimize="${maven.compile.optimize}">
                  <classpath>
                    <path refid="maven.dependency.classpath" />
                    <pathelement path="${maven.build.dest}" />
                  </classpath>
                </javac>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>4</id>
            <phase>generate-test-sources</phase>
            <configuration>
              <tasks>
                <war destfile="target/hello.war" webxml="war_template/WEB-INF/web.xml">
                  <classes dir="target/test-classes">
                    <exclude name="wsrp/**/*" />
                  </classes>
                  <zipfileset dir="war_template/WEB-INF" includes="**/*" prefix="WEB-INF" />
                </war>
              </tasks>
            </configuration>
            <!-- zipfileset dir="war_template/WEB-INF" includes="conf**/*" prefix="WEB-INF/classes" / -->
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>5</id>
            <phase>generate-test-sources</phase>
            <configuration>
              <tasks>
                <mkdir dir="${project.build.directory}/test" />
                <jar destfile="${project.build.directory}/test/exo.pc.component.plugins.wsrp1.jar" basedir="target/classes" />
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!--        <dependencies>-->
      <!--          <dependency>-->
      <!--            <groupId>ant</groupId>-->
      <!--            <artifactId>ant-nodeps</artifactId>-->
      <!--            <version>1.6.5</version>-->
      <!--          </dependency>-->
      <!--        </dependencies>-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <useRepositoryLayout>false</useRepositoryLayout>
              <excludeTransitive>false</excludeTransitive>
              <excludeGroupIds>xerces</excludeGroupIds>
              <outputDirectory>${project.build.directory}/test</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemProperties>
            <property>
              <name>testPath</name>
              <value>${basedir}</value>
            </property>
            <property>
              <name>mock.portal.dir</name>
              <value>${war.dir}</value>
            </property>
            <property>
              <name>maven.exoplatform.dir</name>
              <value>${war.dir}</value>
            </property>
            <property>
              <name>exo.test.cargo.skip</name>
              <value>${exo.test.cargo.skip}</value>
            </property>
          </systemProperties>
          <includes>
            <include>**/AllTestsPortlet.java</include>
          </includes>
        </configuration>
      </plugin>
    </plugins>
  </build>



</project>
